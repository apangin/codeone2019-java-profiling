<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1414" onload="init(evt)" viewBox="0 0 1200 1414" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1397"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1397"> </text>
<g id="frames">
<g>
<title>all (2,791 samples, 100.00%)</title><rect x="10.0" y="1363.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="1374.0">all</text>
</g>
<g>
<title>Runtime1::counter_overflow(JavaThread*, int, Method*) (61 samples, 2.19%)</title><rect x="10.0" y="1347.0" width="25.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.0" y="1358.0">R..</text>
</g>
<g>
<title>SimpleThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (61 samples, 2.19%)</title><rect x="10.0" y="1331.0" width="25.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="1342.0">S..</text>
</g>
<g>
<title>SimpleThresholdPolicy::method_invocation_event(methodHandle const&amp;, methodHandle const&amp;, CompLevel, CompiledMethod*, JavaThread*) (61 samples, 2.19%)</title><rect x="10.0" y="1315.0" width="25.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="1326.0">S..</text>
</g>
<g>
<title>SimpleThresholdPolicy::submit_compile(methodHandle const&amp;, int, CompLevel, JavaThread*) (61 samples, 2.19%)</title><rect x="10.0" y="1299.0" width="25.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.0" y="1310.0">S..</text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, Thread*) (61 samples, 2.19%)</title><rect x="10.0" y="1283.0" width="25.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.0" y="1294.0">C..</text>
</g>
<g>
<title>ConstantPool::resolve_string_constants_impl(constantPoolHandle const&amp;, Thread*) (61 samples, 2.19%)</title><rect x="10.0" y="1267.0" width="25.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.0" y="1278.0">C..</text>
</g>
<g>
<title>StringTable::intern(Symbol*, Thread*) (61 samples, 2.19%)</title><rect x="10.0" y="1251.0" width="25.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="1262.0">S..</text>
</g>
<g>
<title>StringTable::do_intern(Handle, unsigned short*, int, unsigned long, Thread*) (61 samples, 2.19%)</title><rect x="10.0" y="1235.0" width="25.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="13.0" y="1246.0">S..</text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, AllocFailStrategy::AllocFailEnum) (60 samples, 2.15%)</title><rect x="10.0" y="1219.0" width="25.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="13.0" y="1230.0">A..</text>
</g>
<g>
<title>__GI___libc_malloc (60 samples, 2.15%)</title><rect x="10.0" y="1203.0" width="25.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="13.0" y="1214.0">_..</text>
</g>
<g>
<title>WeakHandle&lt;(WeakHandleType)2&gt;::create(Handle) (1 samples, 0.04%)</title><rect x="35.4" y="1219.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="38.4" y="1230.0"></text>
</g>
<g>
<title>OopStorage::allocate() (1 samples, 0.04%)</title><rect x="35.4" y="1203.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="38.4" y="1214.0"></text>
</g>
<g>
<title>OopStorage::Block::new_block(OopStorage const*) (1 samples, 0.04%)</title><rect x="35.4" y="1187.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="38.4" y="1198.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, NativeCallStack const&amp;, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="35.4" y="1171.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="38.4" y="1182.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="35.4" y="1155.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="38.4" y="1166.0"></text>
</g>
<g>
<title>[unknown] (50 samples, 1.79%)</title><rect x="35.8" y="1347.0" width="21.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="38.8" y="1358.0">[..</text>
</g>
<g>
<title>[unknown] (19 samples, 0.68%)</title><rect x="35.8" y="1331.0" width="8.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="38.8" y="1342.0"></text>
</g>
<g>
<title>Profiler::bindNativeLibraryLoad(unsigned char (*)(JNIEnv_*, _jobject*, _jstring*, unsigned char)) (18 samples, 0.64%)</title><rect x="35.8" y="1315.0" width="7.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="38.8" y="1326.0"></text>
</g>
<g>
<title>jni_FindClass (2 samples, 0.07%)</title><rect x="35.8" y="1299.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="38.8" y="1310.0"></text>
</g>
<g>
<title>find_class_from_class_loader(JNIEnv_*, Symbol*, unsigned char, Handle, Handle, unsigned char, Thread*) (2 samples, 0.07%)</title><rect x="35.8" y="1283.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="38.8" y="1294.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (2 samples, 0.07%)</title><rect x="35.8" y="1267.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="38.8" y="1278.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (2 samples, 0.07%)</title><rect x="35.8" y="1251.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="38.8" y="1262.0"></text>
</g>
<g>
<title>PlaceholderTable::find_and_add(int, unsigned int, Symbol*, ClassLoaderData*, PlaceholderTable::classloadAction, Symbol*, Thread*) (1 samples, 0.04%)</title><rect x="35.8" y="1235.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="38.8" y="1246.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="35.8" y="1219.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="38.8" y="1230.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="35.8" y="1203.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="38.8" y="1214.0"></text>
</g>
<g>
<title>SystemDictionary::update_dictionary(unsigned int, int, unsigned int, InstanceKlass*, Handle, Thread*) (1 samples, 0.04%)</title><rect x="36.2" y="1235.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="39.2" y="1246.0"></text>
</g>
<g>
<title>Dictionary::add_klass(unsigned int, Symbol*, InstanceKlass*) (1 samples, 0.04%)</title><rect x="36.2" y="1219.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="39.2" y="1230.0"></text>
</g>
<g>
<title>Hashtable&lt;InstanceKlass*, (MemoryType)1&gt;::allocate_new_entry(unsigned int, InstanceKlass*) (1 samples, 0.04%)</title><rect x="36.2" y="1203.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="39.2" y="1214.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="36.2" y="1187.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="39.2" y="1198.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="36.2" y="1171.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="39.2" y="1182.0"></text>
</g>
<g>
<title>jni_GetMethodID (16 samples, 0.57%)</title><rect x="36.6" y="1299.0" width="6.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="39.6" y="1310.0"></text>
</g>
<g>
<title>get_method_id(JNIEnv_*, _jclass*, char const*, char const*, bool, Thread*) [clone .constprop.179] (16 samples, 0.57%)</title><rect x="36.6" y="1283.0" width="6.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="39.6" y="1294.0"></text>
</g>
<g>
<title>Exceptions::_throw_msg(Thread*, char const*, int, Symbol*, char const*) (16 samples, 0.57%)</title><rect x="36.6" y="1267.0" width="6.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="39.6" y="1278.0"></text>
</g>
<g>
<title>Exceptions::new_exception(Thread*, Symbol*, char const*, Handle, Handle, Handle, Exceptions::ExceptionMsgToUtf8Mode) (16 samples, 0.57%)</title><rect x="36.6" y="1251.0" width="6.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="39.6" y="1262.0"></text>
</g>
<g>
<title>JavaCalls::construct_new_instance(InstanceKlass*, Symbol*, JavaCallArguments*, Thread*) (8 samples, 0.29%)</title><rect x="36.6" y="1235.0" width="3.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="39.6" y="1246.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (8 samples, 0.29%)</title><rect x="36.6" y="1219.0" width="3.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="39.6" y="1230.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (8 samples, 0.29%)</title><rect x="36.6" y="1203.0" width="3.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="39.6" y="1214.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (6 samples, 0.21%)</title><rect x="36.6" y="1187.0" width="2.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="39.6" y="1198.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (4 samples, 0.14%)</title><rect x="36.6" y="1171.0" width="1.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="39.6" y="1182.0"></text>
</g>
<g>
<title>VM::loadMethodIDs(_jvmtiEnv*, _jclass*) (4 samples, 0.14%)</title><rect x="36.6" y="1155.0" width="1.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="39.6" y="1166.0"></text>
</g>
<g>
<title>jvmti_GetClassMethods (4 samples, 0.14%)</title><rect x="36.6" y="1139.0" width="1.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="39.6" y="1150.0"></text>
</g>
<g>
<title>JvmtiEnv::GetClassMethods(oopDesc*, int*, _jmethodID***) (4 samples, 0.14%)</title><rect x="36.6" y="1123.0" width="1.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="39.6" y="1134.0"></text>
</g>
<g>
<title>InstanceKlass::get_jmethod_id(methodHandle const&amp;) (1 samples, 0.04%)</title><rect x="36.6" y="1107.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="39.6" y="1118.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="36.6" y="1091.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="39.6" y="1102.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="36.6" y="1075.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="39.6" y="1086.0"></text>
</g>
<g>
<title>Method::ensure_jmethod_ids(ClassLoaderData*, int) (2 samples, 0.07%)</title><rect x="37.1" y="1107.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="40.1" y="1118.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, AllocFailStrategy::AllocFailEnum) (2 samples, 0.07%)</title><rect x="37.1" y="1091.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="40.1" y="1102.0"></text>
</g>
<g>
<title>__GI___libc_malloc (2 samples, 0.07%)</title><rect x="37.1" y="1075.0" width="0.8" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="40.1" y="1086.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="37.9" y="1107.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="40.9" y="1118.0"></text>
</g>
<g>
<title>VM::loadMethodIDs(_jvmtiEnv*, _jclass*) (2 samples, 0.07%)</title><rect x="38.3" y="1171.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="41.3" y="1182.0"></text>
</g>
<g>
<title>jvmti_GetClassMethods (2 samples, 0.07%)</title><rect x="38.3" y="1155.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="41.3" y="1166.0"></text>
</g>
<g>
<title>JvmtiEnv::GetClassMethods(oopDesc*, int*, _jmethodID***) (2 samples, 0.07%)</title><rect x="38.3" y="1139.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="41.3" y="1150.0"></text>
</g>
<g>
<title>InstanceKlass::get_jmethod_id(methodHandle const&amp;) (1 samples, 0.04%)</title><rect x="38.3" y="1123.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="41.3" y="1134.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="38.3" y="1107.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="41.3" y="1118.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="38.3" y="1091.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="41.3" y="1102.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="38.7" y="1123.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="41.7" y="1134.0"></text>
</g>
<g>
<title>VM::loadMethodIDs(_jvmtiEnv*, _jclass*) (2 samples, 0.07%)</title><rect x="39.2" y="1187.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="42.2" y="1198.0"></text>
</g>
<g>
<title>jvmti_GetClassMethods (2 samples, 0.07%)</title><rect x="39.2" y="1171.0" width="0.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="42.2" y="1182.0"></text>
</g>
<g>
<title>JvmtiEnv::GetClassMethods(oopDesc*, int*, _jmethodID***) (2 samples, 0.07%)</title><rect x="39.2" y="1155.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="42.2" y="1166.0"></text>
</g>
<g>
<title>InstanceKlass::get_jmethod_id(methodHandle const&amp;) (1 samples, 0.04%)</title><rect x="39.2" y="1139.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="42.2" y="1150.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="39.2" y="1123.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="42.2" y="1134.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="39.2" y="1107.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="42.2" y="1118.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="39.6" y="1139.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="42.6" y="1150.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (8 samples, 0.29%)</title><rect x="40.0" y="1235.0" width="3.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="43.0" y="1246.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (8 samples, 0.29%)</title><rect x="40.0" y="1219.0" width="3.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="43.0" y="1230.0"></text>
</g>
<g>
<title>PlaceholderTable::find_and_add(int, unsigned int, Symbol*, ClassLoaderData*, PlaceholderTable::classloadAction, Symbol*, Thread*) (1 samples, 0.04%)</title><rect x="40.0" y="1203.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="43.0" y="1214.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="40.0" y="1187.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="43.0" y="1198.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="40.0" y="1171.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="43.0" y="1182.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (7 samples, 0.25%)</title><rect x="40.4" y="1203.0" width="3.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="43.4" y="1214.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (5 samples, 0.18%)</title><rect x="40.4" y="1187.0" width="2.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="43.4" y="1198.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (5 samples, 0.18%)</title><rect x="40.4" y="1171.0" width="2.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="43.4" y="1182.0"></text>
</g>
<g>
<title>ClassFileParser::post_process_parsed_stream(ClassFileStream const*, ConstantPool*, Thread*) (5 samples, 0.18%)</title><rect x="40.4" y="1155.0" width="2.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="43.4" y="1166.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_super_or_fail(Symbol*, Symbol*, Handle, Handle, bool, Thread*) (5 samples, 0.18%)</title><rect x="40.4" y="1139.0" width="2.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="43.4" y="1150.0"></text>
</g>
<g>
<title>PlaceholderTable::find_and_add(int, unsigned int, Symbol*, ClassLoaderData*, PlaceholderTable::classloadAction, Symbol*, Thread*) (1 samples, 0.04%)</title><rect x="40.4" y="1123.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="43.4" y="1134.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="40.4" y="1107.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="43.4" y="1118.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="40.4" y="1091.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="43.4" y="1102.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (4 samples, 0.14%)</title><rect x="40.9" y="1123.0" width="1.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="43.9" y="1134.0"></text>
</g>
<g>
<title>PlaceholderTable::find_and_add(int, unsigned int, Symbol*, ClassLoaderData*, PlaceholderTable::classloadAction, Symbol*, Thread*) (1 samples, 0.04%)</title><rect x="40.9" y="1107.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="43.9" y="1118.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="40.9" y="1091.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="43.9" y="1102.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="40.9" y="1075.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="43.9" y="1086.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (3 samples, 0.11%)</title><rect x="41.3" y="1107.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="44.3" y="1118.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (1 samples, 0.04%)</title><rect x="41.3" y="1091.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="44.3" y="1102.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.04%)</title><rect x="41.3" y="1075.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="44.3" y="1086.0"></text>
</g>
<g>
<title>ClassFileParser::post_process_parsed_stream(ClassFileStream const*, ConstantPool*, Thread*) (1 samples, 0.04%)</title><rect x="41.3" y="1059.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="44.3" y="1070.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_super_or_fail(Symbol*, Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.04%)</title><rect x="41.3" y="1043.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="44.3" y="1054.0"></text>
</g>
<g>
<title>PlaceholderTable::find_and_add(int, unsigned int, Symbol*, ClassLoaderData*, PlaceholderTable::classloadAction, Symbol*, Thread*) (1 samples, 0.04%)</title><rect x="41.3" y="1027.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="44.3" y="1038.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="41.3" y="1011.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="44.3" y="1022.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="41.3" y="995.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="44.3" y="1006.0"></text>
</g>
<g>
<title>SystemDictionary::find_or_define_instance_class(Symbol*, Handle, InstanceKlass*, Thread*) (2 samples, 0.07%)</title><rect x="41.7" y="1091.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="44.7" y="1102.0"></text>
</g>
<g>
<title>PlaceholderTable::find_and_add(int, unsigned int, Symbol*, ClassLoaderData*, PlaceholderTable::classloadAction, Symbol*, Thread*) (1 samples, 0.04%)</title><rect x="41.7" y="1075.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="44.7" y="1086.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="41.7" y="1059.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="44.7" y="1070.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="41.7" y="1043.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="44.7" y="1054.0"></text>
</g>
<g>
<title>SystemDictionary::define_instance_class(InstanceKlass*, Thread*) (1 samples, 0.04%)</title><rect x="42.1" y="1075.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="45.1" y="1086.0"></text>
</g>
<g>
<title>SystemDictionary::update_dictionary(unsigned int, int, unsigned int, InstanceKlass*, Handle, Thread*) (1 samples, 0.04%)</title><rect x="42.1" y="1059.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="45.1" y="1070.0"></text>
</g>
<g>
<title>Dictionary::add_klass(unsigned int, Symbol*, InstanceKlass*) (1 samples, 0.04%)</title><rect x="42.1" y="1043.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="45.1" y="1054.0"></text>
</g>
<g>
<title>Hashtable&lt;InstanceKlass*, (MemoryType)1&gt;::allocate_new_entry(unsigned int, InstanceKlass*) (1 samples, 0.04%)</title><rect x="42.1" y="1027.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="45.1" y="1038.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="42.1" y="1011.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="45.1" y="1022.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="42.1" y="995.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="45.1" y="1006.0"></text>
</g>
<g>
<title>SystemDictionary::find_or_define_instance_class(Symbol*, Handle, InstanceKlass*, Thread*) (2 samples, 0.07%)</title><rect x="42.6" y="1187.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="45.6" y="1198.0"></text>
</g>
<g>
<title>PlaceholderTable::find_and_add(int, unsigned int, Symbol*, ClassLoaderData*, PlaceholderTable::classloadAction, Symbol*, Thread*) (1 samples, 0.04%)</title><rect x="42.6" y="1171.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="45.6" y="1182.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="42.6" y="1155.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="45.6" y="1166.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="42.6" y="1139.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="45.6" y="1150.0"></text>
</g>
<g>
<title>SystemDictionary::define_instance_class(InstanceKlass*, Thread*) (1 samples, 0.04%)</title><rect x="43.0" y="1171.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="46.0" y="1182.0"></text>
</g>
<g>
<title>SystemDictionary::update_dictionary(unsigned int, int, unsigned int, InstanceKlass*, Handle, Thread*) (1 samples, 0.04%)</title><rect x="43.0" y="1155.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="46.0" y="1166.0"></text>
</g>
<g>
<title>Dictionary::add_klass(unsigned int, Symbol*, InstanceKlass*) (1 samples, 0.04%)</title><rect x="43.0" y="1139.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="46.0" y="1150.0"></text>
</g>
<g>
<title>Hashtable&lt;InstanceKlass*, (MemoryType)1&gt;::allocate_new_entry(unsigned int, InstanceKlass*) (1 samples, 0.04%)</title><rect x="43.0" y="1123.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="46.0" y="1134.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="43.0" y="1107.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="46.0" y="1118.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="43.0" y="1091.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="46.0" y="1102.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="43.4" y="1315.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="46.4" y="1326.0"></text>
</g>
<g>
<title>__GI___libc_malloc (31 samples, 1.11%)</title><rect x="43.8" y="1331.0" width="13.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="46.8" y="1342.0"></text>
</g>
<g>
<title>demo10/GetImage.main (1,265 samples, 45.32%)</title><rect x="56.9" y="1347.0" width="534.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="59.9" y="1358.0">demo10/GetImage.main</text>
</g>
<g>
<title>demo10/GetImage.getImage (1,265 samples, 45.32%)</title><rect x="56.9" y="1331.0" width="534.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="59.9" y="1342.0">demo10/GetImage.getImage</text>
</g>
<g>
<title>demo10/GetImage.copyStream (116 samples, 4.16%)</title><rect x="56.9" y="1315.0" width="49.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="59.9" y="1326.0">demo1..</text>
</g>
<g>
<title>java/io/FilterInputStream.read (116 samples, 4.16%)</title><rect x="56.9" y="1299.0" width="49.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="59.9" y="1310.0">java/..</text>
</g>
<g>
<title>java/io/FilterInputStream.read (116 samples, 4.16%)</title><rect x="56.9" y="1283.0" width="49.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="59.9" y="1294.0">java/..</text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (116 samples, 4.16%)</title><rect x="56.9" y="1267.0" width="49.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="59.9" y="1278.0">java/..</text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (116 samples, 4.16%)</title><rect x="56.9" y="1251.0" width="49.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="59.9" y="1262.0">java/..</text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (116 samples, 4.16%)</title><rect x="56.9" y="1235.0" width="49.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="59.9" y="1246.0">java/..</text>
</g>
<g>
<title>__GI___libc_malloc (116 samples, 4.16%)</title><rect x="56.9" y="1219.0" width="49.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="59.9" y="1230.0">__GI_..</text>
</g>
<g>
<title>java/lang/Class.getResourceAsStream (1,149 samples, 41.17%)</title><rect x="106.0" y="1315.0" width="485.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="109.0" y="1326.0">java/lang/Class.getResourceAsStream</text>
</g>
<g>
<title>java/lang/ClassLoader.getResourceAsStream (1,149 samples, 41.17%)</title><rect x="106.0" y="1299.0" width="485.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="109.0" y="1310.0">java/lang/ClassLoader.getResourceAsStream</text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1,033 samples, 37.01%)</title><rect x="106.0" y="1283.0" width="436.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="109.0" y="1294.0">java/lang/ClassLoader.getResource</text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1,033 samples, 37.01%)</title><rect x="106.0" y="1267.0" width="436.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="109.0" y="1278.0">jdk/internal/loader/BuiltinClassLoader.findResource</text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResourceOnClassPath (1,033 samples, 37.01%)</title><rect x="106.0" y="1251.0" width="436.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="109.0" y="1262.0">jdk/internal/loader/BuiltinClassLoader.findResourceOnClassPath</text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.findResource (1,033 samples, 37.01%)</title><rect x="106.0" y="1235.0" width="436.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="109.0" y="1246.0">jdk/internal/loader/URLClassPath.findResource</text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$FileLoader.findResource (1,033 samples, 37.01%)</title><rect x="106.0" y="1219.0" width="436.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="109.0" y="1230.0">jdk/internal/loader/URLClassPath$FileLoader.findResource</text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$FileLoader.getResource (1,033 samples, 37.01%)</title><rect x="106.0" y="1203.0" width="436.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="109.0" y="1214.0">jdk/internal/loader/URLClassPath$FileLoader.getResource</text>
</g>
<g>
<title>java/io/File.exists (1,033 samples, 37.01%)</title><rect x="106.0" y="1187.0" width="436.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="109.0" y="1198.0">java/io/File.exists</text>
</g>
<g>
<title>java/io/UnixFileSystem.getBooleanAttributes (1,033 samples, 37.01%)</title><rect x="106.0" y="1171.0" width="436.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="109.0" y="1182.0">java/io/UnixFileSystem.getBooleanAttributes</text>
</g>
<g>
<title>java/io/UnixFileSystem.getBooleanAttributes0 (1,033 samples, 37.01%)</title><rect x="106.0" y="1155.0" width="436.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="109.0" y="1166.0">java/io/UnixFileSystem.getBooleanAttributes0</text>
</g>
<g>
<title>Java_java_io_UnixFileSystem_getBooleanAttributes0 (1,033 samples, 37.01%)</title><rect x="106.0" y="1139.0" width="436.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="109.0" y="1150.0">Java_java_io_UnixFileSystem_getBooleanAttributes0</text>
</g>
<g>
<title>__GI___libc_malloc (1,033 samples, 37.01%)</title><rect x="106.0" y="1123.0" width="436.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="109.0" y="1134.0">__GI___libc_malloc</text>
</g>
<g>
<title>java/net/URL.openStream (116 samples, 4.16%)</title><rect x="542.7" y="1283.0" width="49.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="545.7" y="1294.0">java/..</text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarURLConnection.getInputStream (116 samples, 4.16%)</title><rect x="542.7" y="1267.0" width="49.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="545.7" y="1278.0">sun/n..</text>
</g>
<g>
<title>java/util/jar/JarFile.getInputStream (116 samples, 4.16%)</title><rect x="542.7" y="1251.0" width="49.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="545.7" y="1262.0">java/..</text>
</g>
<g>
<title>java/util/zip/ZipFile.getInputStream (116 samples, 4.16%)</title><rect x="542.7" y="1235.0" width="49.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="545.7" y="1246.0">java/..</text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInflaterInputStream.&lt;init&gt; (116 samples, 4.16%)</title><rect x="542.7" y="1219.0" width="49.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="545.7" y="1230.0">java/..</text>
</g>
<g>
<title>java/util/zip/ZipFile$CleanableResource.getInflater (116 samples, 4.16%)</title><rect x="542.7" y="1203.0" width="49.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="545.7" y="1214.0">java/..</text>
</g>
<g>
<title>java/util/zip/Inflater.&lt;init&gt; (116 samples, 4.16%)</title><rect x="542.7" y="1187.0" width="49.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="545.7" y="1198.0">java/..</text>
</g>
<g>
<title>java/util/zip/Inflater.init (116 samples, 4.16%)</title><rect x="542.7" y="1171.0" width="49.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="545.7" y="1182.0">java/..</text>
</g>
<g>
<title>__GI___libc_malloc (116 samples, 4.16%)</title><rect x="542.7" y="1155.0" width="49.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="545.7" y="1166.0">__GI_..</text>
</g>
<g>
<title>start_thread (1,415 samples, 50.70%)</title><rect x="591.8" y="1347.0" width="598.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="594.8" y="1358.0">start_thread</text>
</g>
<g>
<title>thread_native_entry(Thread*) (1,415 samples, 50.70%)</title><rect x="591.8" y="1331.0" width="598.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="594.8" y="1342.0">thread_native_entry(Thread*)</text>
</g>
<g>
<title>Thread::call_run() (1,415 samples, 50.70%)</title><rect x="591.8" y="1315.0" width="598.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="594.8" y="1326.0">Thread::call_run()</text>
</g>
<g>
<title>GangWorker::loop() (511 samples, 18.31%)</title><rect x="591.8" y="1299.0" width="216.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="594.8" y="1310.0">GangWorker::loop()</text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (511 samples, 18.31%)</title><rect x="591.8" y="1283.0" width="216.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="594.8" y="1294.0">G1ParTask::work(unsigned int)</text>
</g>
<g>
<title>G1ParScanThreadStateSet::state_for_worker(unsigned int) (16 samples, 0.57%)</title><rect x="591.8" y="1267.0" width="6.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="594.8" y="1278.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, AllocFailStrategy::AllocFailEnum) (4 samples, 0.14%)</title><rect x="591.8" y="1251.0" width="1.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="594.8" y="1262.0"></text>
</g>
<g>
<title>__GI___libc_malloc (4 samples, 0.14%)</title><rect x="591.8" y="1235.0" width="1.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="594.8" y="1246.0"></text>
</g>
<g>
<title>G1ParScanThreadState::G1ParScanThreadState(G1CollectedHeap*, unsigned int, unsigned long) (12 samples, 0.43%)</title><rect x="593.4" y="1251.0" width="5.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="596.4" y="1262.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, AllocFailStrategy::AllocFailEnum) (8 samples, 0.29%)</title><rect x="593.4" y="1235.0" width="3.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="596.4" y="1246.0"></text>
</g>
<g>
<title>__GI___libc_malloc (8 samples, 0.29%)</title><rect x="593.4" y="1219.0" width="3.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="596.4" y="1230.0"></text>
</g>
<g>
<title>G1EvacuationRootClosures::create_root_closures(G1ParScanThreadState*, G1CollectedHeap*) (4 samples, 0.14%)</title><rect x="596.8" y="1235.0" width="1.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="599.8" y="1246.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, AllocFailStrategy::AllocFailEnum) (4 samples, 0.14%)</title><rect x="596.8" y="1219.0" width="1.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="599.8" y="1230.0"></text>
</g>
<g>
<title>__GI___libc_malloc (4 samples, 0.14%)</title><rect x="596.8" y="1203.0" width="1.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="599.8" y="1214.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (483 samples, 17.31%)</title><rect x="598.5" y="1267.0" width="204.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="601.5" y="1278.0">G1RemSet::scan_rem_set(G1Pa..</text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (483 samples, 17.31%)</title><rect x="598.5" y="1251.0" width="204.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="601.5" y="1262.0">G1CollectionSet::iterate_fr..</text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (483 samples, 17.31%)</title><rect x="598.5" y="1235.0" width="204.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="601.5" y="1246.0">G1ScanRSForRegionClosure::d..</text>
</g>
<g>
<title>G1CodeRootSet::nmethods_do(CodeBlobClosure*) const (483 samples, 17.31%)</title><rect x="598.5" y="1219.0" width="204.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="601.5" y="1230.0">G1CodeRootSet::nmethods_do(..</text>
</g>
<g>
<title>G1CodeBlobClosure::do_code_blob(CodeBlob*) (483 samples, 17.31%)</title><rect x="598.5" y="1203.0" width="204.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="601.5" y="1214.0">G1CodeBlobClosure::do_code_..</text>
</g>
<g>
<title>nmethod::oops_do(OopClosure*, bool) (483 samples, 17.31%)</title><rect x="598.5" y="1187.0" width="204.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="601.5" y="1198.0">nmethod::oops_do(OopClosure..</text>
</g>
<g>
<title>HeapRegionRemSet::add_strong_code_root(nmethod*) (483 samples, 17.31%)</title><rect x="598.5" y="1171.0" width="204.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="601.5" y="1182.0">HeapRegionRemSet::add_stron..</text>
</g>
<g>
<title>G1CodeRootSet::add(nmethod*) (483 samples, 17.31%)</title><rect x="598.5" y="1155.0" width="204.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="601.5" y="1166.0">G1CodeRootSet::add(nmethod*)</text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, AllocFailStrategy::AllocFailEnum) (3 samples, 0.11%)</title><rect x="598.5" y="1139.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="601.5" y="1150.0"></text>
</g>
<g>
<title>__GI___libc_malloc (3 samples, 0.11%)</title><rect x="598.5" y="1123.0" width="1.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="601.5" y="1134.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, NativeCallStack const&amp;, AllocFailStrategy::AllocFailEnum) (345 samples, 12.36%)</title><rect x="599.8" y="1139.0" width="145.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="602.8" y="1150.0">AllocateHeap(unsig..</text>
</g>
<g>
<title>__GI___libc_malloc (345 samples, 12.36%)</title><rect x="599.8" y="1123.0" width="145.9" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="602.8" y="1134.0">__GI___libc_malloc</text>
</g>
<g>
<title>G1CodeRootSet::move_to_large() (135 samples, 4.84%)</title><rect x="745.7" y="1139.0" width="57.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="748.7" y="1150.0">G1Code..</text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, AllocFailStrategy::AllocFailEnum) (5 samples, 0.18%)</title><rect x="745.7" y="1123.0" width="2.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="748.7" y="1134.0"></text>
</g>
<g>
<title>__GI___libc_malloc (5 samples, 0.18%)</title><rect x="745.7" y="1107.0" width="2.1" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="748.7" y="1118.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, NativeCallStack const&amp;, AllocFailStrategy::AllocFailEnum) (5 samples, 0.18%)</title><rect x="747.8" y="1123.0" width="2.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="750.8" y="1134.0"></text>
</g>
<g>
<title>__GI___libc_malloc (5 samples, 0.18%)</title><rect x="747.8" y="1107.0" width="2.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="750.8" y="1118.0"></text>
</g>
<g>
<title>G1CodeRootSetTable::copy_to(G1CodeRootSetTable*) (125 samples, 4.48%)</title><rect x="749.9" y="1123.0" width="52.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="752.9" y="1134.0">G1Cod..</text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, NativeCallStack const&amp;, AllocFailStrategy::AllocFailEnum) (125 samples, 4.48%)</title><rect x="749.9" y="1107.0" width="52.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="752.9" y="1118.0">Alloc..</text>
</g>
<g>
<title>__GI___libc_malloc (125 samples, 4.48%)</title><rect x="749.9" y="1091.0" width="52.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="752.9" y="1102.0">__GI_..</text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (12 samples, 0.43%)</title><rect x="802.7" y="1267.0" width="5.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="805.7" y="1278.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (12 samples, 0.43%)</title><rect x="802.7" y="1251.0" width="5.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="805.7" y="1262.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (12 samples, 0.43%)</title><rect x="802.7" y="1235.0" width="5.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="805.7" y="1246.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (12 samples, 0.43%)</title><rect x="802.7" y="1219.0" width="5.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="805.7" y="1230.0"></text>
</g>
<g>
<title>G1CodeBlobClosure::do_code_blob(CodeBlob*) (12 samples, 0.43%)</title><rect x="802.7" y="1203.0" width="5.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="805.7" y="1214.0"></text>
</g>
<g>
<title>nmethod::oops_do(OopClosure*, bool) (12 samples, 0.43%)</title><rect x="802.7" y="1187.0" width="5.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="805.7" y="1198.0"></text>
</g>
<g>
<title>HeapRegionRemSet::add_strong_code_root(nmethod*) (12 samples, 0.43%)</title><rect x="802.7" y="1171.0" width="5.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="805.7" y="1182.0"></text>
</g>
<g>
<title>G1CodeRootSet::add(nmethod*) (12 samples, 0.43%)</title><rect x="802.7" y="1155.0" width="5.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="805.7" y="1166.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, AllocFailStrategy::AllocFailEnum) (3 samples, 0.11%)</title><rect x="802.7" y="1139.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="805.7" y="1150.0"></text>
</g>
<g>
<title>__GI___libc_malloc (3 samples, 0.11%)</title><rect x="802.7" y="1123.0" width="1.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="805.7" y="1134.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, NativeCallStack const&amp;, AllocFailStrategy::AllocFailEnum) (9 samples, 0.32%)</title><rect x="804.0" y="1139.0" width="3.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="807.0" y="1150.0"></text>
</g>
<g>
<title>__GI___libc_malloc (9 samples, 0.32%)</title><rect x="804.0" y="1123.0" width="3.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="807.0" y="1134.0"></text>
</g>
<g>
<title>JavaThread::run() (702 samples, 25.15%)</title><rect x="807.8" y="1299.0" width="296.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="810.8" y="1310.0">JavaThread::run()</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (702 samples, 25.15%)</title><rect x="807.8" y="1283.0" width="296.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="810.8" y="1294.0">JavaThread::thread_main_inner()</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (680 samples, 24.36%)</title><rect x="807.8" y="1267.0" width="287.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="810.8" y="1278.0">CompileBroker::compiler_thread_loop()</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (680 samples, 24.36%)</title><rect x="807.8" y="1251.0" width="287.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="810.8" y="1262.0">CompileBroker::invoke_compiler_on_metho..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (666 samples, 23.86%)</title><rect x="807.8" y="1235.0" width="281.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="810.8" y="1246.0">C2Compiler::compile_method(ciEnv*, ciM..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (666 samples, 23.86%)</title><rect x="807.8" y="1219.0" width="281.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="810.8" y="1230.0">Compile::Compile(ciEnv*, C2Compiler*, ..</text>
</g>
<g>
<title>Arena::Arena(MemoryType) (1 samples, 0.04%)</title><rect x="807.8" y="1203.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="810.8" y="1214.0"></text>
</g>
<g>
<title>ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="807.8" y="1187.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="810.8" y="1198.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="807.8" y="1171.0" width="0.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="810.8" y="1182.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (341 samples, 12.22%)</title><rect x="808.2" y="1203.0" width="144.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="811.2" y="1214.0">Compile::Code_Gen()</text>
</g>
<g>
<title>Compile::Output() (2 samples, 0.07%)</title><rect x="808.2" y="1187.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="811.2" y="1198.0"></text>
</g>
<g>
<title>Compile::BuildOopMaps() (2 samples, 0.07%)</title><rect x="808.2" y="1171.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="811.2" y="1182.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (2 samples, 0.07%)</title><rect x="808.2" y="1155.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="811.2" y="1166.0"></text>
</g>
<g>
<title>__GI___libc_malloc (2 samples, 0.07%)</title><rect x="808.2" y="1139.0" width="0.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="811.2" y="1150.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (9 samples, 0.32%)</title><rect x="809.1" y="1187.0" width="3.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="812.1" y="1198.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="809.1" y="1171.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="812.1" y="1182.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="809.1" y="1155.0" width="0.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="812.1" y="1166.0"></text>
</g>
<g>
<title>cmpFastUnlockNode::emit(CodeBuffer&amp;, PhaseRegAlloc*) const (1 samples, 0.04%)</title><rect x="809.5" y="1171.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="812.5" y="1182.0"></text>
</g>
<g>
<title>MacroAssembler::fast_unlock(RegisterImpl*, RegisterImpl*, RegisterImpl*, bool) (1 samples, 0.04%)</title><rect x="809.5" y="1155.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="812.5" y="1166.0"></text>
</g>
<g>
<title>Assembler::jmpb(Label&amp;) (1 samples, 0.04%)</title><rect x="809.5" y="1139.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="812.5" y="1150.0"></text>
</g>
<g>
<title>Label::add_patch_at(CodeBuffer*, int) (1 samples, 0.04%)</title><rect x="809.5" y="1123.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="812.5" y="1134.0"></text>
</g>
<g>
<title>CodeBuffer::create_patch_overflow() (1 samples, 0.04%)</title><rect x="809.5" y="1107.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="812.5" y="1118.0"></text>
</g>
<g>
<title>Arena::operator new(unsigned long, MemoryType) (1 samples, 0.04%)</title><rect x="809.5" y="1091.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="812.5" y="1102.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, NativeCallStack const&amp;, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="809.5" y="1075.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="812.5" y="1086.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="809.5" y="1059.0" width="0.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="812.5" y="1070.0"></text>
</g>
<g>
<title>has_negativesNode::emit(CodeBuffer&amp;, PhaseRegAlloc*) const (1 samples, 0.04%)</title><rect x="809.9" y="1171.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="812.9" y="1182.0"></text>
</g>
<g>
<title>MacroAssembler::has_negatives(RegisterImpl*, RegisterImpl*, RegisterImpl*, RegisterImpl*, XMMRegisterImpl*, XMMRegisterImpl*) (1 samples, 0.04%)</title><rect x="809.9" y="1155.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="812.9" y="1166.0"></text>
</g>
<g>
<title>Assembler::jccb(Assembler::Condition, Label&amp;) (1 samples, 0.04%)</title><rect x="809.9" y="1139.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="812.9" y="1150.0"></text>
</g>
<g>
<title>Label::add_patch_at(CodeBuffer*, int) (1 samples, 0.04%)</title><rect x="809.9" y="1123.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="812.9" y="1134.0"></text>
</g>
<g>
<title>CodeBuffer::create_patch_overflow() (1 samples, 0.04%)</title><rect x="809.9" y="1107.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="812.9" y="1118.0"></text>
</g>
<g>
<title>Arena::operator new(unsigned long, MemoryType) (1 samples, 0.04%)</title><rect x="809.9" y="1091.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="812.9" y="1102.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, NativeCallStack const&amp;, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="809.9" y="1075.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="812.9" y="1086.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="809.9" y="1059.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="812.9" y="1070.0"></text>
</g>
<g>
<title>jmpConNode::emit(CodeBuffer&amp;, PhaseRegAlloc*) const (1 samples, 0.04%)</title><rect x="810.3" y="1171.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="813.3" y="1182.0"></text>
</g>
<g>
<title>Assembler::jcc(Assembler::Condition, Label&amp;, bool) (1 samples, 0.04%)</title><rect x="810.3" y="1155.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="813.3" y="1166.0"></text>
</g>
<g>
<title>Label::add_patch_at(CodeBuffer*, int) (1 samples, 0.04%)</title><rect x="810.3" y="1139.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="813.3" y="1150.0"></text>
</g>
<g>
<title>CodeBuffer::create_patch_overflow() (1 samples, 0.04%)</title><rect x="810.3" y="1123.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="813.3" y="1134.0"></text>
</g>
<g>
<title>Arena::operator new(unsigned long, MemoryType) (1 samples, 0.04%)</title><rect x="810.3" y="1107.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="813.3" y="1118.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, NativeCallStack const&amp;, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="810.3" y="1091.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="813.3" y="1102.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="810.3" y="1075.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="813.3" y="1086.0"></text>
</g>
<g>
<title>jmpDir_shortNode::emit(CodeBuffer&amp;, PhaseRegAlloc*) const (3 samples, 0.11%)</title><rect x="810.8" y="1171.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="813.8" y="1182.0"></text>
</g>
<g>
<title>Assembler::jmpb(Label&amp;) (3 samples, 0.11%)</title><rect x="810.8" y="1155.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="813.8" y="1166.0"></text>
</g>
<g>
<title>Label::add_patch_at(CodeBuffer*, int) (3 samples, 0.11%)</title><rect x="810.8" y="1139.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="813.8" y="1150.0"></text>
</g>
<g>
<title>CodeBuffer::create_patch_overflow() (3 samples, 0.11%)</title><rect x="810.8" y="1123.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="813.8" y="1134.0"></text>
</g>
<g>
<title>Arena::operator new(unsigned long, MemoryType) (3 samples, 0.11%)</title><rect x="810.8" y="1107.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="813.8" y="1118.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, NativeCallStack const&amp;, AllocFailStrategy::AllocFailEnum) (3 samples, 0.11%)</title><rect x="810.8" y="1091.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="813.8" y="1102.0"></text>
</g>
<g>
<title>__GI___libc_malloc (3 samples, 0.11%)</title><rect x="810.8" y="1075.0" width="1.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="813.8" y="1086.0"></text>
</g>
<g>
<title>string_equalsNode::emit(CodeBuffer&amp;, PhaseRegAlloc*) const (2 samples, 0.07%)</title><rect x="812.0" y="1171.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="815.0" y="1182.0"></text>
</g>
<g>
<title>MacroAssembler::arrays_equals(bool, RegisterImpl*, RegisterImpl*, RegisterImpl*, RegisterImpl*, RegisterImpl*, XMMRegisterImpl*, XMMRegisterImpl*, bool) (2 samples, 0.07%)</title><rect x="812.0" y="1155.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="815.0" y="1166.0"></text>
</g>
<g>
<title>Assembler::jccb(Assembler::Condition, Label&amp;) (2 samples, 0.07%)</title><rect x="812.0" y="1139.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="815.0" y="1150.0"></text>
</g>
<g>
<title>Label::add_patch_at(CodeBuffer*, int) (2 samples, 0.07%)</title><rect x="812.0" y="1123.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="815.0" y="1134.0"></text>
</g>
<g>
<title>CodeBuffer::create_patch_overflow() (2 samples, 0.07%)</title><rect x="812.0" y="1107.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="815.0" y="1118.0"></text>
</g>
<g>
<title>Arena::operator new(unsigned long, MemoryType) (2 samples, 0.07%)</title><rect x="812.0" y="1091.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="815.0" y="1102.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, NativeCallStack const&amp;, AllocFailStrategy::AllocFailEnum) (2 samples, 0.07%)</title><rect x="812.0" y="1075.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="815.0" y="1086.0"></text>
</g>
<g>
<title>__GI___libc_malloc (2 samples, 0.07%)</title><rect x="812.0" y="1059.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="815.0" y="1070.0"></text>
</g>
<g>
<title>Matcher::Matcher() (5 samples, 0.18%)</title><rect x="812.9" y="1187.0" width="2.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="815.9" y="1198.0"></text>
</g>
<g>
<title>PhaseTransform::PhaseTransform(Phase::PhaseNumber) (5 samples, 0.18%)</title><rect x="812.9" y="1171.0" width="2.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="815.9" y="1182.0"></text>
</g>
<g>
<title>Type_Array::grow(unsigned int) (5 samples, 0.18%)</title><rect x="812.9" y="1155.0" width="2.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="815.9" y="1166.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (5 samples, 0.18%)</title><rect x="812.9" y="1139.0" width="2.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="815.9" y="1150.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (5 samples, 0.18%)</title><rect x="812.9" y="1123.0" width="2.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="815.9" y="1134.0"></text>
</g>
<g>
<title>__GI___libc_malloc (5 samples, 0.18%)</title><rect x="812.9" y="1107.0" width="2.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="815.9" y="1118.0"></text>
</g>
<g>
<title>Matcher::match() (31 samples, 1.11%)</title><rect x="815.0" y="1187.0" width="13.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="818.0" y="1198.0"></text>
</g>
<g>
<title>Matcher::find_shared(Node*) (8 samples, 0.29%)</title><rect x="815.0" y="1171.0" width="3.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="818.0" y="1182.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (8 samples, 0.29%)</title><rect x="815.0" y="1155.0" width="3.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="818.0" y="1166.0"></text>
</g>
<g>
<title>__GI___libc_malloc (8 samples, 0.29%)</title><rect x="815.0" y="1139.0" width="3.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="818.0" y="1150.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (18 samples, 0.64%)</title><rect x="818.4" y="1171.0" width="7.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="821.4" y="1182.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (6 samples, 0.21%)</title><rect x="818.4" y="1155.0" width="2.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="821.4" y="1166.0"></text>
</g>
<g>
<title>__GI___libc_malloc (6 samples, 0.21%)</title><rect x="818.4" y="1139.0" width="2.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="821.4" y="1150.0"></text>
</g>
<g>
<title>Compile::grow_node_notes(GrowableArray&lt;Node_Notes*&gt;*, int) (1 samples, 0.04%)</title><rect x="820.9" y="1155.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="823.9" y="1166.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="820.9" y="1139.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="823.9" y="1150.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="820.9" y="1123.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="823.9" y="1134.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (7 samples, 0.25%)</title><rect x="821.3" y="1155.0" width="3.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="824.3" y="1166.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (2 samples, 0.07%)</title><rect x="821.3" y="1139.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="824.3" y="1150.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (2 samples, 0.07%)</title><rect x="821.3" y="1123.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="824.3" y="1134.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (2 samples, 0.07%)</title><rect x="821.3" y="1107.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="824.3" y="1118.0"></text>
</g>
<g>
<title>ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum) (2 samples, 0.07%)</title><rect x="821.3" y="1091.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="824.3" y="1102.0"></text>
</g>
<g>
<title>__GI___libc_malloc (2 samples, 0.07%)</title><rect x="821.3" y="1075.0" width="0.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="824.3" y="1086.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (5 samples, 0.18%)</title><rect x="822.2" y="1139.0" width="2.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="825.2" y="1150.0"></text>
</g>
<g>
<title>Node_Array::grow(unsigned int) (5 samples, 0.18%)</title><rect x="822.2" y="1123.0" width="2.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="825.2" y="1134.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (5 samples, 0.18%)</title><rect x="822.2" y="1107.0" width="2.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="825.2" y="1118.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (5 samples, 0.18%)</title><rect x="822.2" y="1091.0" width="2.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="825.2" y="1102.0"></text>
</g>
<g>
<title>__GI___libc_malloc (5 samples, 0.18%)</title><rect x="822.2" y="1075.0" width="2.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="825.2" y="1086.0"></text>
</g>
<g>
<title>Node::clone() const (1 samples, 0.04%)</title><rect x="824.3" y="1155.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="827.3" y="1166.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="824.3" y="1139.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="827.3" y="1150.0"></text>
</g>
<g>
<title>ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="824.3" y="1123.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="827.3" y="1134.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="824.3" y="1107.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="827.3" y="1118.0"></text>
</g>
<g>
<title>Node::out_grow(unsigned int) (3 samples, 0.11%)</title><rect x="824.7" y="1155.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="827.7" y="1166.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (3 samples, 0.11%)</title><rect x="824.7" y="1139.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="827.7" y="1150.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (3 samples, 0.11%)</title><rect x="824.7" y="1123.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="827.7" y="1134.0"></text>
</g>
<g>
<title>__GI___libc_malloc (3 samples, 0.11%)</title><rect x="824.7" y="1107.0" width="1.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="827.7" y="1118.0"></text>
</g>
<g>
<title>Node_Array::grow(unsigned int) (5 samples, 0.18%)</title><rect x="826.0" y="1171.0" width="2.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="829.0" y="1182.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (5 samples, 0.18%)</title><rect x="826.0" y="1155.0" width="2.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="829.0" y="1166.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (5 samples, 0.18%)</title><rect x="826.0" y="1139.0" width="2.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="829.0" y="1150.0"></text>
</g>
<g>
<title>__GI___libc_malloc (5 samples, 0.18%)</title><rect x="826.0" y="1123.0" width="2.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="829.0" y="1134.0"></text>
</g>
<g>
<title>PhaseBlockLayout::PhaseBlockLayout(PhaseCFG&amp;) (5 samples, 0.18%)</title><rect x="828.1" y="1187.0" width="2.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="831.1" y="1198.0"></text>
</g>
<g>
<title>PhaseBlockLayout::grow_traces() (5 samples, 0.18%)</title><rect x="828.1" y="1171.0" width="2.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="831.1" y="1182.0"></text>
</g>
<g>
<title>__GI___libc_malloc (5 samples, 0.18%)</title><rect x="828.1" y="1155.0" width="2.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="831.1" y="1166.0"></text>
</g>
<g>
<title>PhaseCFG::PhaseCFG(Arena*, RootNode*, Matcher&amp;) (3 samples, 0.11%)</title><rect x="830.2" y="1187.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="833.2" y="1198.0"></text>
</g>
<g>
<title>PhaseCFG::build_cfg() (3 samples, 0.11%)</title><rect x="830.2" y="1171.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="833.2" y="1182.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="830.2" y="1155.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="833.2" y="1166.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="830.2" y="1139.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="833.2" y="1150.0"></text>
</g>
<g>
<title>Block_Array::grow(unsigned int) (2 samples, 0.07%)</title><rect x="830.6" y="1155.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="833.6" y="1166.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (2 samples, 0.07%)</title><rect x="830.6" y="1139.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="833.6" y="1150.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (2 samples, 0.07%)</title><rect x="830.6" y="1123.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="833.6" y="1134.0"></text>
</g>
<g>
<title>__GI___libc_malloc (2 samples, 0.07%)</title><rect x="830.6" y="1107.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="833.6" y="1118.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (70 samples, 2.51%)</title><rect x="831.5" y="1187.0" width="29.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="834.5" y="1198.0">Ph..</text>
</g>
<g>
<title>PhaseCFG::build_dominator_tree() (2 samples, 0.07%)</title><rect x="831.5" y="1171.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="834.5" y="1182.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (2 samples, 0.07%)</title><rect x="831.5" y="1155.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="834.5" y="1166.0"></text>
</g>
<g>
<title>__GI___libc_malloc (2 samples, 0.07%)</title><rect x="831.5" y="1139.0" width="0.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="834.5" y="1150.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (68 samples, 2.44%)</title><rect x="832.3" y="1171.0" width="28.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="835.3" y="1182.0">Ph..</text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (2 samples, 0.07%)</title><rect x="832.3" y="1155.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="835.3" y="1166.0"></text>
</g>
<g>
<title>__GI___libc_malloc (2 samples, 0.07%)</title><rect x="832.3" y="1139.0" width="0.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="835.3" y="1150.0"></text>
</g>
<g>
<title>PhaseCFG::implicit_null_check(Block*, Node*, Node*, int) (2 samples, 0.07%)</title><rect x="833.2" y="1155.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="836.2" y="1166.0"></text>
</g>
<g>
<title>Block_Array::grow(unsigned int) (1 samples, 0.04%)</title><rect x="833.2" y="1139.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="836.2" y="1150.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="833.2" y="1123.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="836.2" y="1134.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="833.2" y="1107.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="836.2" y="1118.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="833.2" y="1091.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="836.2" y="1102.0"></text>
</g>
<g>
<title>PhaseCFG::latency_from_uses(Node*) (1 samples, 0.04%)</title><rect x="833.6" y="1139.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="836.6" y="1150.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="833.6" y="1123.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="836.6" y="1134.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="833.6" y="1107.0" width="0.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="836.6" y="1118.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (1 samples, 0.04%)</title><rect x="834.0" y="1155.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="837.0" y="1166.0"></text>
</g>
<g>
<title>PhaseCFG::hoist_to_cheaper_block(Block*, Block*, Node*) (1 samples, 0.04%)</title><rect x="834.0" y="1139.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="837.0" y="1150.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="834.0" y="1123.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="837.0" y="1134.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="834.0" y="1107.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="837.0" y="1118.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_pinned_nodes(VectorSet&amp;) (2 samples, 0.07%)</title><rect x="834.4" y="1155.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="837.4" y="1166.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (2 samples, 0.07%)</title><rect x="834.4" y="1139.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="837.4" y="1150.0"></text>
</g>
<g>
<title>__GI___libc_malloc (2 samples, 0.07%)</title><rect x="834.4" y="1123.0" width="0.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="837.4" y="1134.0"></text>
</g>
<g>
<title>PhaseChaitin::mark_ssa() (2 samples, 0.07%)</title><rect x="835.3" y="1155.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="838.3" y="1166.0"></text>
</g>
<g>
<title>GrowableArray&lt;unsigned int&gt;::raw_at_put_grow(int, unsigned int const&amp;, unsigned int const&amp;) (2 samples, 0.07%)</title><rect x="835.3" y="1139.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="838.3" y="1150.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (2 samples, 0.07%)</title><rect x="835.3" y="1123.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="838.3" y="1134.0"></text>
</g>
<g>
<title>__GI___libc_malloc (2 samples, 0.07%)</title><rect x="835.3" y="1107.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="838.3" y="1118.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (20 samples, 0.72%)</title><rect x="836.1" y="1155.0" width="8.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="839.1" y="1166.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (20 samples, 0.72%)</title><rect x="836.1" y="1139.0" width="8.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="839.1" y="1150.0"></text>
</g>
<g>
<title>__GI___libc_malloc (20 samples, 0.72%)</title><rect x="836.1" y="1123.0" width="8.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="839.1" y="1134.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (39 samples, 1.40%)</title><rect x="844.6" y="1155.0" width="16.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="847.6" y="1166.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (10 samples, 0.36%)</title><rect x="844.6" y="1139.0" width="4.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="847.6" y="1150.0"></text>
</g>
<g>
<title>ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="844.6" y="1123.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="847.6" y="1134.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="844.6" y="1107.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="847.6" y="1118.0"></text>
</g>
<g>
<title>__GI___libc_malloc (9 samples, 0.32%)</title><rect x="845.0" y="1123.0" width="3.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="848.0" y="1134.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (2 samples, 0.07%)</title><rect x="848.8" y="1139.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="851.8" y="1150.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (2 samples, 0.07%)</title><rect x="848.8" y="1123.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="851.8" y="1134.0"></text>
</g>
<g>
<title>ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum) (2 samples, 0.07%)</title><rect x="848.8" y="1107.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="851.8" y="1118.0"></text>
</g>
<g>
<title>__GI___libc_malloc (2 samples, 0.07%)</title><rect x="848.8" y="1091.0" width="0.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="851.8" y="1102.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (19 samples, 0.68%)</title><rect x="849.7" y="1139.0" width="8.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="852.7" y="1150.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (10 samples, 0.36%)</title><rect x="849.7" y="1123.0" width="4.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="852.7" y="1134.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (10 samples, 0.36%)</title><rect x="849.7" y="1107.0" width="4.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="852.7" y="1118.0"></text>
</g>
<g>
<title>ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum) (10 samples, 0.36%)</title><rect x="849.7" y="1091.0" width="4.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="852.7" y="1102.0"></text>
</g>
<g>
<title>__GI___libc_malloc (10 samples, 0.36%)</title><rect x="849.7" y="1075.0" width="4.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="852.7" y="1086.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int, Arena*) (9 samples, 0.32%)</title><rect x="853.9" y="1123.0" width="3.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="856.9" y="1134.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (9 samples, 0.32%)</title><rect x="853.9" y="1107.0" width="3.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="856.9" y="1118.0"></text>
</g>
<g>
<title>ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum) (9 samples, 0.32%)</title><rect x="853.9" y="1091.0" width="3.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="856.9" y="1102.0"></text>
</g>
<g>
<title>__GI___libc_malloc (9 samples, 0.32%)</title><rect x="853.9" y="1075.0" width="3.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="856.9" y="1086.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, unsigned int, VectorSet&amp;) (1 samples, 0.04%)</title><rect x="857.7" y="1139.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="860.7" y="1150.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (1 samples, 0.04%)</title><rect x="857.7" y="1123.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="860.7" y="1134.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="857.7" y="1107.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="860.7" y="1118.0"></text>
</g>
<g>
<title>ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="857.7" y="1091.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="860.7" y="1102.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="857.7" y="1075.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="860.7" y="1086.0"></text>
</g>
<g>
<title>PhaseLive::freeset(Block*) (7 samples, 0.25%)</title><rect x="858.1" y="1139.0" width="3.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="861.1" y="1150.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (7 samples, 0.25%)</title><rect x="858.1" y="1123.0" width="3.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="861.1" y="1134.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (7 samples, 0.25%)</title><rect x="858.1" y="1107.0" width="3.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="861.1" y="1118.0"></text>
</g>
<g>
<title>ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum) (7 samples, 0.25%)</title><rect x="858.1" y="1091.0" width="3.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="861.1" y="1102.0"></text>
</g>
<g>
<title>__GI___libc_malloc (7 samples, 0.25%)</title><rect x="858.1" y="1075.0" width="3.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="861.1" y="1086.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (214 samples, 7.67%)</title><rect x="861.1" y="1187.0" width="90.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="864.1" y="1198.0">PhaseChait..</text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (2 samples, 0.07%)</title><rect x="861.1" y="1171.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="864.1" y="1182.0"></text>
</g>
<g>
<title>GrowableArray&lt;unsigned int&gt;::raw_at_put_grow(int, unsigned int const&amp;, unsigned int const&amp;) (2 samples, 0.07%)</title><rect x="861.1" y="1155.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="864.1" y="1166.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (2 samples, 0.07%)</title><rect x="861.1" y="1139.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="864.1" y="1150.0"></text>
</g>
<g>
<title>__GI___libc_malloc (2 samples, 0.07%)</title><rect x="861.1" y="1123.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="864.1" y="1134.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (4 samples, 0.14%)</title><rect x="861.9" y="1171.0" width="1.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="864.9" y="1182.0"></text>
</g>
<g>
<title>PhaseChaitin::new_lrg(Node const*, unsigned int) (1 samples, 0.04%)</title><rect x="861.9" y="1155.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="864.9" y="1166.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="861.9" y="1139.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="864.9" y="1150.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="861.9" y="1123.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="864.9" y="1134.0"></text>
</g>
<g>
<title>PhaseChaitin::split_DEF(Node*, Block*, int, unsigned int, Node**, Node**, GrowableArray&lt;unsigned int&gt;, int) (1 samples, 0.04%)</title><rect x="862.3" y="1155.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="865.3" y="1166.0"></text>
</g>
<g>
<title>Block_Array::grow(unsigned int) (1 samples, 0.04%)</title><rect x="862.3" y="1139.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="865.3" y="1150.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="862.3" y="1123.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="865.3" y="1134.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="862.3" y="1107.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="865.3" y="1118.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="862.3" y="1091.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="865.3" y="1102.0"></text>
</g>
<g>
<title>PhaseChaitin::split_Rematerialize(Node*, Block*, unsigned int, unsigned int&amp;, GrowableArray&lt;unsigned int&gt;, int, unsigned int*, Node**, bool) (2 samples, 0.07%)</title><rect x="862.8" y="1155.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="865.8" y="1166.0"></text>
</g>
<g>
<title>Node::clone() const (2 samples, 0.07%)</title><rect x="862.8" y="1139.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="865.8" y="1150.0"></text>
</g>
<g>
<title>Compile::copy_node_notes_to(Node*, Node*) (2 samples, 0.07%)</title><rect x="862.8" y="1123.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="865.8" y="1134.0"></text>
</g>
<g>
<title>Compile::grow_node_notes(GrowableArray&lt;Node_Notes*&gt;*, int) (2 samples, 0.07%)</title><rect x="862.8" y="1107.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="865.8" y="1118.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (2 samples, 0.07%)</title><rect x="862.8" y="1091.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="865.8" y="1102.0"></text>
</g>
<g>
<title>__GI___libc_malloc (2 samples, 0.07%)</title><rect x="862.8" y="1075.0" width="0.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="865.8" y="1086.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (114 samples, 4.08%)</title><rect x="863.6" y="1171.0" width="48.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="866.6" y="1182.0">Phas..</text>
</g>
<g>
<title>Node_Array::grow(unsigned int) (114 samples, 4.08%)</title><rect x="863.6" y="1155.0" width="48.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="866.6" y="1166.0">Node..</text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (114 samples, 4.08%)</title><rect x="863.6" y="1139.0" width="48.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="866.6" y="1150.0">Aren..</text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (114 samples, 4.08%)</title><rect x="863.6" y="1123.0" width="48.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="866.6" y="1134.0">Aren..</text>
</g>
<g>
<title>ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum) (114 samples, 4.08%)</title><rect x="863.6" y="1107.0" width="48.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="866.6" y="1118.0">Chun..</text>
</g>
<g>
<title>__GI___libc_malloc (114 samples, 4.08%)</title><rect x="863.6" y="1091.0" width="48.2" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="866.6" y="1102.0">__GI..</text>
</g>
<g>
<title>PhaseChaitin::stretch_base_pointer_live_ranges(ResourceArea*) (2 samples, 0.07%)</title><rect x="911.8" y="1171.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="914.8" y="1182.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (2 samples, 0.07%)</title><rect x="911.8" y="1155.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="914.8" y="1166.0"></text>
</g>
<g>
<title>__GI___libc_malloc (2 samples, 0.07%)</title><rect x="911.8" y="1139.0" width="0.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="914.8" y="1150.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (60 samples, 2.15%)</title><rect x="912.7" y="1171.0" width="25.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="915.7" y="1182.0">P..</text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (60 samples, 2.15%)</title><rect x="912.7" y="1155.0" width="25.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="915.7" y="1166.0">A..</text>
</g>
<g>
<title>__GI___libc_malloc (60 samples, 2.15%)</title><rect x="912.7" y="1139.0" width="25.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="915.7" y="1150.0">_..</text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (30 samples, 1.07%)</title><rect x="938.0" y="1171.0" width="12.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="941.0" y="1182.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (30 samples, 1.07%)</title><rect x="938.0" y="1155.0" width="12.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="941.0" y="1166.0"></text>
</g>
<g>
<title>__GI___libc_malloc (30 samples, 1.07%)</title><rect x="938.0" y="1139.0" width="12.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="941.0" y="1150.0"></text>
</g>
<g>
<title>PhaseRegAlloc::alloc_node_regs(int) (2 samples, 0.07%)</title><rect x="950.7" y="1171.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="953.7" y="1182.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (2 samples, 0.07%)</title><rect x="950.7" y="1155.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="953.7" y="1166.0"></text>
</g>
<g>
<title>__GI___libc_malloc (2 samples, 0.07%)</title><rect x="950.7" y="1139.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="953.7" y="1150.0"></text>
</g>
<g>
<title>PhasePeephole::PhasePeephole(PhaseRegAlloc*, PhaseCFG&amp;) (2 samples, 0.07%)</title><rect x="951.5" y="1187.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="954.5" y="1198.0"></text>
</g>
<g>
<title>Type_Array::grow(unsigned int) (2 samples, 0.07%)</title><rect x="951.5" y="1171.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="954.5" y="1182.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (2 samples, 0.07%)</title><rect x="951.5" y="1155.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="954.5" y="1166.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (2 samples, 0.07%)</title><rect x="951.5" y="1139.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="954.5" y="1150.0"></text>
</g>
<g>
<title>__GI___libc_malloc (2 samples, 0.07%)</title><rect x="951.5" y="1123.0" width="0.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="954.5" y="1134.0"></text>
</g>
<g>
<title>Compile::Optimize() (239 samples, 8.56%)</title><rect x="952.4" y="1203.0" width="101.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="955.4" y="1214.0">Compile::Opt..</text>
</g>
<g>
<title>Compile::final_graph_reshaping() (1 samples, 0.04%)</title><rect x="952.4" y="1187.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="955.4" y="1198.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="952.4" y="1171.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="955.4" y="1182.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="952.4" y="1155.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="955.4" y="1166.0"></text>
</g>
<g>
<title>Compile::remove_speculative_types(PhaseIterGVN&amp;) [clone .part.256] (2 samples, 0.07%)</title><rect x="952.8" y="1187.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="955.8" y="1198.0"></text>
</g>
<g>
<title>Node_Array::grow(unsigned int) (2 samples, 0.07%)</title><rect x="952.8" y="1171.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="955.8" y="1182.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (2 samples, 0.07%)</title><rect x="952.8" y="1155.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="955.8" y="1166.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (2 samples, 0.07%)</title><rect x="952.8" y="1139.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="955.8" y="1150.0"></text>
</g>
<g>
<title>__GI___libc_malloc (2 samples, 0.07%)</title><rect x="952.8" y="1123.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="955.8" y="1134.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (3 samples, 0.11%)</title><rect x="953.7" y="1187.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="956.7" y="1198.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (3 samples, 0.11%)</title><rect x="953.7" y="1171.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="956.7" y="1182.0"></text>
</g>
<g>
<title>ConnectionGraph::split_unique_types(GrowableArray&lt;Node*&gt;&amp;, GrowableArray&lt;ArrayCopyNode*&gt;&amp;) (1 samples, 0.04%)</title><rect x="953.7" y="1155.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="956.7" y="1166.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.04%)</title><rect x="953.7" y="1139.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="956.7" y="1150.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.04%)</title><rect x="953.7" y="1123.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="956.7" y="1134.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.04%)</title><rect x="953.7" y="1107.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="956.7" y="1118.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.04%)</title><rect x="953.7" y="1091.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="956.7" y="1102.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.04%)</title><rect x="953.7" y="1075.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="956.7" y="1086.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.04%)</title><rect x="953.7" y="1059.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="956.7" y="1070.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.04%)</title><rect x="953.7" y="1043.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="956.7" y="1054.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.04%)</title><rect x="953.7" y="1027.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="956.7" y="1038.0"></text>
</g>
<g>
<title>ConnectionGraph::create_split_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;, bool&amp;) (1 samples, 0.04%)</title><rect x="953.7" y="1011.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="956.7" y="1022.0"></text>
</g>
<g>
<title>Node_Array::grow(unsigned int) (1 samples, 0.04%)</title><rect x="953.7" y="995.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="956.7" y="1006.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="953.7" y="979.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="956.7" y="990.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="953.7" y="963.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="956.7" y="974.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="953.7" y="947.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="956.7" y="958.0"></text>
</g>
<g>
<title>Node_Array::grow(unsigned int) (2 samples, 0.07%)</title><rect x="954.1" y="1155.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="957.1" y="1166.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (2 samples, 0.07%)</title><rect x="954.1" y="1139.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="957.1" y="1150.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (2 samples, 0.07%)</title><rect x="954.1" y="1123.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="957.1" y="1134.0"></text>
</g>
<g>
<title>__GI___libc_malloc (2 samples, 0.07%)</title><rect x="954.1" y="1107.0" width="0.8" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="957.1" y="1118.0"></text>
</g>
<g>
<title>PhaseCCP::do_transform() (5 samples, 0.18%)</title><rect x="954.9" y="1187.0" width="2.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="957.9" y="1198.0"></text>
</g>
<g>
<title>PhaseCCP::transform(Node*) (5 samples, 0.18%)</title><rect x="954.9" y="1171.0" width="2.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="957.9" y="1182.0"></text>
</g>
<g>
<title>Node_Array::grow(unsigned int) (5 samples, 0.18%)</title><rect x="954.9" y="1155.0" width="2.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="957.9" y="1166.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (5 samples, 0.18%)</title><rect x="954.9" y="1139.0" width="2.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="957.9" y="1150.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (5 samples, 0.18%)</title><rect x="954.9" y="1123.0" width="2.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="957.9" y="1134.0"></text>
</g>
<g>
<title>__GI___libc_malloc (5 samples, 0.18%)</title><rect x="954.9" y="1107.0" width="2.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="957.9" y="1118.0"></text>
</g>
<g>
<title>PhaseIdealLoop::PhaseIdealLoop(PhaseIterGVN&amp;, bool, bool, bool) (23 samples, 0.82%)</title><rect x="957.0" y="1187.0" width="9.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="960.0" y="1198.0"></text>
</g>
<g>
<title>PhaseTransform::PhaseTransform(Phase::PhaseNumber) (23 samples, 0.82%)</title><rect x="957.0" y="1171.0" width="9.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="960.0" y="1182.0"></text>
</g>
<g>
<title>Type_Array::grow(unsigned int) (23 samples, 0.82%)</title><rect x="957.0" y="1155.0" width="9.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="960.0" y="1166.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (23 samples, 0.82%)</title><rect x="957.0" y="1139.0" width="9.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="960.0" y="1150.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (23 samples, 0.82%)</title><rect x="957.0" y="1123.0" width="9.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="960.0" y="1134.0"></text>
</g>
<g>
<title>__GI___libc_malloc (23 samples, 0.82%)</title><rect x="957.0" y="1107.0" width="9.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="960.0" y="1118.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (197 samples, 7.06%)</title><rect x="966.8" y="1187.0" width="83.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="969.8" y="1198.0">PhaseIdea..</text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (17 samples, 0.61%)</title><rect x="966.8" y="1171.0" width="7.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="969.8" y="1182.0"></text>
</g>
<g>
<title>__GI___libc_malloc (17 samples, 0.61%)</title><rect x="966.8" y="1155.0" width="7.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="969.8" y="1166.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (2 samples, 0.07%)</title><rect x="974.0" y="1171.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="977.0" y="1182.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (2 samples, 0.07%)</title><rect x="974.0" y="1155.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="977.0" y="1166.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_counted_loop(Node*, IdealLoopTree*&amp;) (2 samples, 0.07%)</title><rect x="974.0" y="1139.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="977.0" y="1150.0"></text>
</g>
<g>
<title>PhaseIdealLoop::set_idom(Node*, Node*, unsigned int) (2 samples, 0.07%)</title><rect x="974.0" y="1123.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="977.0" y="1134.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (2 samples, 0.07%)</title><rect x="974.0" y="1107.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="977.0" y="1118.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (2 samples, 0.07%)</title><rect x="974.0" y="1091.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="977.0" y="1102.0"></text>
</g>
<g>
<title>__GI___libc_malloc (2 samples, 0.07%)</title><rect x="974.0" y="1075.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="977.0" y="1086.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (27 samples, 0.97%)</title><rect x="974.8" y="1171.0" width="11.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="977.8" y="1182.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (23 samples, 0.82%)</title><rect x="974.8" y="1155.0" width="9.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="977.8" y="1166.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split_impl(PhaseIdealLoop*, Node_List&amp;) (23 samples, 0.82%)</title><rect x="974.8" y="1139.0" width="9.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="977.8" y="1150.0"></text>
</g>
<g>
<title>PhaseIdealLoop::do_unroll(IdealLoopTree*, Node_List&amp;, bool) (15 samples, 0.54%)</title><rect x="974.8" y="1123.0" width="6.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="977.8" y="1134.0"></text>
</g>
<g>
<title>PhaseIdealLoop::clone_loop(IdealLoopTree*, Node_List&amp;, int, PhaseIdealLoop::CloneLoopMode, Node*) (15 samples, 0.54%)</title><rect x="974.8" y="1107.0" width="6.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="977.8" y="1118.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (1 samples, 0.04%)</title><rect x="974.8" y="1091.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="977.8" y="1102.0"></text>
</g>
<g>
<title>NodeHash::grow() (1 samples, 0.04%)</title><rect x="974.8" y="1075.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="977.8" y="1086.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="974.8" y="1059.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="977.8" y="1070.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="974.8" y="1043.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="977.8" y="1054.0"></text>
</g>
<g>
<title>Node_Array::grow(unsigned int) (6 samples, 0.21%)</title><rect x="975.2" y="1091.0" width="2.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="978.2" y="1102.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (6 samples, 0.21%)</title><rect x="975.2" y="1075.0" width="2.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="978.2" y="1086.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (6 samples, 0.21%)</title><rect x="975.2" y="1059.0" width="2.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="978.2" y="1070.0"></text>
</g>
<g>
<title>__GI___libc_malloc (6 samples, 0.21%)</title><rect x="975.2" y="1043.0" width="2.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="978.2" y="1054.0"></text>
</g>
<g>
<title>PhaseIdealLoop::set_idom(Node*, Node*, unsigned int) (8 samples, 0.29%)</title><rect x="977.8" y="1091.0" width="3.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="980.8" y="1102.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (8 samples, 0.29%)</title><rect x="977.8" y="1075.0" width="3.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="980.8" y="1086.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (8 samples, 0.29%)</title><rect x="977.8" y="1059.0" width="3.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="980.8" y="1070.0"></text>
</g>
<g>
<title>__GI___libc_malloc (8 samples, 0.29%)</title><rect x="977.8" y="1043.0" width="3.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="980.8" y="1054.0"></text>
</g>
<g>
<title>PhaseIdealLoop::insert_pre_post_loops(IdealLoopTree*, Node_List&amp;, bool) (8 samples, 0.29%)</title><rect x="981.1" y="1123.0" width="3.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="984.1" y="1134.0"></text>
</g>
<g>
<title>PhaseIdealLoop::clone_loop(IdealLoopTree*, Node_List&amp;, int, PhaseIdealLoop::CloneLoopMode, Node*) (2 samples, 0.07%)</title><rect x="981.1" y="1107.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="984.1" y="1118.0"></text>
</g>
<g>
<title>Node_Array::grow(unsigned int) (2 samples, 0.07%)</title><rect x="981.1" y="1091.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="984.1" y="1102.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (2 samples, 0.07%)</title><rect x="981.1" y="1075.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="984.1" y="1086.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (2 samples, 0.07%)</title><rect x="981.1" y="1059.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="984.1" y="1070.0"></text>
</g>
<g>
<title>__GI___libc_malloc (2 samples, 0.07%)</title><rect x="981.1" y="1043.0" width="0.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="984.1" y="1054.0"></text>
</g>
<g>
<title>PhaseIdealLoop::insert_post_loop(IdealLoopTree*, Node_List&amp;, CountedLoopNode*, CountedLoopEndNode*, Node*, Node*, CountedLoopNode*&amp;) (6 samples, 0.21%)</title><rect x="982.0" y="1107.0" width="2.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="985.0" y="1118.0"></text>
</g>
<g>
<title>PhaseIdealLoop::clone_loop(IdealLoopTree*, Node_List&amp;, int, PhaseIdealLoop::CloneLoopMode, Node*) (6 samples, 0.21%)</title><rect x="982.0" y="1091.0" width="2.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="985.0" y="1102.0"></text>
</g>
<g>
<title>Node_Array::grow(unsigned int) (2 samples, 0.07%)</title><rect x="982.0" y="1075.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="985.0" y="1086.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (2 samples, 0.07%)</title><rect x="982.0" y="1059.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="985.0" y="1070.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (2 samples, 0.07%)</title><rect x="982.0" y="1043.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="985.0" y="1054.0"></text>
</g>
<g>
<title>__GI___libc_malloc (2 samples, 0.07%)</title><rect x="982.0" y="1027.0" width="0.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="985.0" y="1038.0"></text>
</g>
<g>
<title>PhaseIdealLoop::set_idom(Node*, Node*, unsigned int) (3 samples, 0.11%)</title><rect x="982.8" y="1075.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="985.8" y="1086.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (3 samples, 0.11%)</title><rect x="982.8" y="1059.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="985.8" y="1070.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (3 samples, 0.11%)</title><rect x="982.8" y="1043.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="985.8" y="1054.0"></text>
</g>
<g>
<title>__GI___libc_malloc (3 samples, 0.11%)</title><rect x="982.8" y="1027.0" width="1.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="985.8" y="1038.0"></text>
</g>
<g>
<title>PhaseIterGVN::register_new_node_with_optimizer(Node*, Node*) (1 samples, 0.04%)</title><rect x="984.1" y="1075.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="987.1" y="1086.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="984.1" y="1059.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="987.1" y="1070.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="984.1" y="1043.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="987.1" y="1054.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="984.1" y="1027.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="987.1" y="1038.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split_impl(PhaseIdealLoop*, Node_List&amp;) (4 samples, 0.14%)</title><rect x="984.5" y="1155.0" width="1.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="987.5" y="1166.0"></text>
</g>
<g>
<title>PhaseIdealLoop::do_unroll(IdealLoopTree*, Node_List&amp;, bool) (2 samples, 0.07%)</title><rect x="984.5" y="1139.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="987.5" y="1150.0"></text>
</g>
<g>
<title>PhaseIdealLoop::clone_loop(IdealLoopTree*, Node_List&amp;, int, PhaseIdealLoop::CloneLoopMode, Node*) (2 samples, 0.07%)</title><rect x="984.5" y="1123.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="987.5" y="1134.0"></text>
</g>
<g>
<title>Node_Array::grow(unsigned int) (1 samples, 0.04%)</title><rect x="984.5" y="1107.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="987.5" y="1118.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="984.5" y="1091.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="987.5" y="1102.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="984.5" y="1075.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="987.5" y="1086.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="984.5" y="1059.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="987.5" y="1070.0"></text>
</g>
<g>
<title>PhaseIdealLoop::set_idom(Node*, Node*, unsigned int) (1 samples, 0.04%)</title><rect x="984.9" y="1107.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="987.9" y="1118.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="984.9" y="1091.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="987.9" y="1102.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="984.9" y="1075.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="987.9" y="1086.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="984.9" y="1059.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="987.9" y="1070.0"></text>
</g>
<g>
<title>PhaseIdealLoop::insert_pre_post_loops(IdealLoopTree*, Node_List&amp;, bool) (2 samples, 0.07%)</title><rect x="985.4" y="1139.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="988.4" y="1150.0"></text>
</g>
<g>
<title>PhaseIdealLoop::clone_loop(IdealLoopTree*, Node_List&amp;, int, PhaseIdealLoop::CloneLoopMode, Node*) (2 samples, 0.07%)</title><rect x="985.4" y="1123.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="988.4" y="1134.0"></text>
</g>
<g>
<title>Node_Array::grow(unsigned int) (1 samples, 0.04%)</title><rect x="985.4" y="1107.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="988.4" y="1118.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="985.4" y="1091.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="988.4" y="1102.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="985.4" y="1075.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="988.4" y="1086.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="985.4" y="1059.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="988.4" y="1070.0"></text>
</g>
<g>
<title>PhaseIterGVN::register_new_node_with_optimizer(Node*, Node*) (1 samples, 0.04%)</title><rect x="985.8" y="1107.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="988.8" y="1118.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="985.8" y="1091.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="988.8" y="1102.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="985.8" y="1075.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="988.8" y="1086.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="985.8" y="1059.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="988.8" y="1070.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (16 samples, 0.57%)</title><rect x="986.2" y="1171.0" width="6.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="989.2" y="1182.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (11 samples, 0.39%)</title><rect x="986.2" y="1155.0" width="4.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="989.2" y="1166.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (6 samples, 0.21%)</title><rect x="986.2" y="1139.0" width="2.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="989.2" y="1150.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (3 samples, 0.11%)</title><rect x="986.2" y="1123.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="989.2" y="1134.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (2 samples, 0.07%)</title><rect x="986.2" y="1107.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="989.2" y="1118.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_impl(IdealLoopTree*) [clone .part.74] (2 samples, 0.07%)</title><rect x="986.2" y="1091.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="989.2" y="1102.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_impl_helper(IdealLoopTree*, ProjNode*, ProjNode*, CountedLoopNode*, ConNode*, Invariance&amp;, Deoptimization::DeoptReason) (2 samples, 0.07%)</title><rect x="986.2" y="1075.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="989.2" y="1086.0"></text>
</g>
<g>
<title>Node_Array::grow(unsigned int) (2 samples, 0.07%)</title><rect x="986.2" y="1059.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="989.2" y="1070.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (2 samples, 0.07%)</title><rect x="986.2" y="1043.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="989.2" y="1054.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (2 samples, 0.07%)</title><rect x="986.2" y="1027.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="989.2" y="1038.0"></text>
</g>
<g>
<title>__GI___libc_malloc (2 samples, 0.07%)</title><rect x="986.2" y="1011.0" width="0.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="989.2" y="1022.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_impl(IdealLoopTree*) [clone .part.74] (1 samples, 0.04%)</title><rect x="987.1" y="1107.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="990.1" y="1118.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_impl_helper(IdealLoopTree*, ProjNode*, ProjNode*, CountedLoopNode*, ConNode*, Invariance&amp;, Deoptimization::DeoptReason) (1 samples, 0.04%)</title><rect x="987.1" y="1091.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="990.1" y="1102.0"></text>
</g>
<g>
<title>Node_Array::grow(unsigned int) (1 samples, 0.04%)</title><rect x="987.1" y="1075.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="990.1" y="1086.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="987.1" y="1059.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="990.1" y="1070.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="987.1" y="1043.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="990.1" y="1054.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="987.1" y="1027.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="990.1" y="1038.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_impl(IdealLoopTree*) [clone .part.74] (3 samples, 0.11%)</title><rect x="987.5" y="1123.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="990.5" y="1134.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_impl_helper(IdealLoopTree*, ProjNode*, ProjNode*, CountedLoopNode*, ConNode*, Invariance&amp;, Deoptimization::DeoptReason) (3 samples, 0.11%)</title><rect x="987.5" y="1107.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="990.5" y="1118.0"></text>
</g>
<g>
<title>Node_Array::grow(unsigned int) (3 samples, 0.11%)</title><rect x="987.5" y="1091.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="990.5" y="1102.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (3 samples, 0.11%)</title><rect x="987.5" y="1075.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="990.5" y="1086.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (3 samples, 0.11%)</title><rect x="987.5" y="1059.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="990.5" y="1070.0"></text>
</g>
<g>
<title>__GI___libc_malloc (3 samples, 0.11%)</title><rect x="987.5" y="1043.0" width="1.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="990.5" y="1054.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_impl(IdealLoopTree*) [clone .part.74] (5 samples, 0.18%)</title><rect x="988.8" y="1139.0" width="2.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="991.8" y="1150.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_impl_helper(IdealLoopTree*, ProjNode*, ProjNode*, CountedLoopNode*, ConNode*, Invariance&amp;, Deoptimization::DeoptReason) (5 samples, 0.18%)</title><rect x="988.8" y="1123.0" width="2.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="991.8" y="1134.0"></text>
</g>
<g>
<title>Node_Array::grow(unsigned int) (5 samples, 0.18%)</title><rect x="988.8" y="1107.0" width="2.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="991.8" y="1118.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (5 samples, 0.18%)</title><rect x="988.8" y="1091.0" width="2.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="991.8" y="1102.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (5 samples, 0.18%)</title><rect x="988.8" y="1075.0" width="2.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="991.8" y="1086.0"></text>
</g>
<g>
<title>__GI___libc_malloc (5 samples, 0.18%)</title><rect x="988.8" y="1059.0" width="2.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="991.8" y="1070.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_impl(IdealLoopTree*) [clone .part.74] (5 samples, 0.18%)</title><rect x="990.9" y="1155.0" width="2.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="993.9" y="1166.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_impl_helper(IdealLoopTree*, ProjNode*, ProjNode*, CountedLoopNode*, ConNode*, Invariance&amp;, Deoptimization::DeoptReason) (5 samples, 0.18%)</title><rect x="990.9" y="1139.0" width="2.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="993.9" y="1150.0"></text>
</g>
<g>
<title>Node_Array::grow(unsigned int) (2 samples, 0.07%)</title><rect x="990.9" y="1123.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="993.9" y="1134.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (2 samples, 0.07%)</title><rect x="990.9" y="1107.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="993.9" y="1118.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (2 samples, 0.07%)</title><rect x="990.9" y="1091.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="993.9" y="1102.0"></text>
</g>
<g>
<title>__GI___libc_malloc (2 samples, 0.07%)</title><rect x="990.9" y="1075.0" width="0.8" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="993.9" y="1086.0"></text>
</g>
<g>
<title>PhaseIdealLoop::create_new_if_for_predicate(ProjNode*, Node*, Deoptimization::DeoptReason, int) (3 samples, 0.11%)</title><rect x="991.7" y="1123.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="994.7" y="1134.0"></text>
</g>
<g>
<title>PhaseIdealLoop::set_idom(Node*, Node*, unsigned int) (3 samples, 0.11%)</title><rect x="991.7" y="1107.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="994.7" y="1118.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (3 samples, 0.11%)</title><rect x="991.7" y="1091.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="994.7" y="1102.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (3 samples, 0.11%)</title><rect x="991.7" y="1075.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="994.7" y="1086.0"></text>
</g>
<g>
<title>__GI___libc_malloc (3 samples, 0.11%)</title><rect x="991.7" y="1059.0" width="1.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="994.7" y="1070.0"></text>
</g>
<g>
<title>Node_Array::grow(unsigned int) (23 samples, 0.82%)</title><rect x="993.0" y="1171.0" width="9.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="996.0" y="1182.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (23 samples, 0.82%)</title><rect x="993.0" y="1155.0" width="9.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="996.0" y="1166.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (23 samples, 0.82%)</title><rect x="993.0" y="1139.0" width="9.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="996.0" y="1150.0"></text>
</g>
<g>
<title>__GI___libc_malloc (23 samples, 0.82%)</title><rect x="993.0" y="1123.0" width="9.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="996.0" y="1134.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (67 samples, 2.40%)</title><rect x="1002.7" y="1171.0" width="28.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1005.7" y="1182.0">Ph..</text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (67 samples, 2.40%)</title><rect x="1002.7" y="1155.0" width="28.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1005.7" y="1166.0">Ar..</text>
</g>
<g>
<title>__GI___libc_malloc (67 samples, 2.40%)</title><rect x="1002.7" y="1139.0" width="28.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1005.7" y="1150.0">__..</text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (11 samples, 0.39%)</title><rect x="1031.0" y="1171.0" width="4.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1034.0" y="1182.0"></text>
</g>
<g>
<title>Node_Array::grow(unsigned int) (11 samples, 0.39%)</title><rect x="1031.0" y="1155.0" width="4.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1034.0" y="1166.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (11 samples, 0.39%)</title><rect x="1031.0" y="1139.0" width="4.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1034.0" y="1150.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (11 samples, 0.39%)</title><rect x="1031.0" y="1123.0" width="4.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1034.0" y="1134.0"></text>
</g>
<g>
<title>__GI___libc_malloc (11 samples, 0.39%)</title><rect x="1031.0" y="1107.0" width="4.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1034.0" y="1118.0"></text>
</g>
<g>
<title>PhaseIdealLoop::init_dom_lca_tags() (23 samples, 0.82%)</title><rect x="1035.7" y="1171.0" width="9.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1038.7" y="1182.0"></text>
</g>
<g>
<title>Node_Array::grow(unsigned int) (23 samples, 0.82%)</title><rect x="1035.7" y="1155.0" width="9.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1038.7" y="1166.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (23 samples, 0.82%)</title><rect x="1035.7" y="1139.0" width="9.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1038.7" y="1150.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (23 samples, 0.82%)</title><rect x="1035.7" y="1123.0" width="9.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1038.7" y="1134.0"></text>
</g>
<g>
<title>__GI___libc_malloc (23 samples, 0.82%)</title><rect x="1035.7" y="1107.0" width="9.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1038.7" y="1118.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (6 samples, 0.21%)</title><rect x="1045.4" y="1171.0" width="2.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1048.4" y="1182.0"></text>
</g>
<g>
<title>PhaseIdealLoop::do_split_if(Node*) (6 samples, 0.21%)</title><rect x="1045.4" y="1155.0" width="2.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1048.4" y="1166.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_thru_region(Node*, Node*) (6 samples, 0.21%)</title><rect x="1045.4" y="1139.0" width="2.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1048.4" y="1150.0"></text>
</g>
<g>
<title>Node_Array::grow(unsigned int) (1 samples, 0.04%)</title><rect x="1045.4" y="1123.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1048.4" y="1134.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="1045.4" y="1107.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1048.4" y="1118.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="1045.4" y="1091.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1048.4" y="1102.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="1045.4" y="1075.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1048.4" y="1086.0"></text>
</g>
<g>
<title>PhaseIdealLoop::set_idom(Node*, Node*, unsigned int) (4 samples, 0.14%)</title><rect x="1045.8" y="1123.0" width="1.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1048.8" y="1134.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (4 samples, 0.14%)</title><rect x="1045.8" y="1107.0" width="1.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1048.8" y="1118.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (4 samples, 0.14%)</title><rect x="1045.8" y="1091.0" width="1.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1048.8" y="1102.0"></text>
</g>
<g>
<title>__GI___libc_malloc (4 samples, 0.14%)</title><rect x="1045.8" y="1075.0" width="1.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1048.8" y="1086.0"></text>
</g>
<g>
<title>PhaseIterGVN::register_new_node_with_optimizer(Node*, Node*) (1 samples, 0.04%)</title><rect x="1047.5" y="1123.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1050.5" y="1134.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="1047.5" y="1107.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1050.5" y="1118.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="1047.5" y="1091.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1050.5" y="1102.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="1047.5" y="1075.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1050.5" y="1086.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (5 samples, 0.18%)</title><rect x="1047.9" y="1171.0" width="2.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1050.9" y="1182.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (5 samples, 0.18%)</title><rect x="1047.9" y="1155.0" width="2.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1050.9" y="1166.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (4 samples, 0.14%)</title><rect x="1047.9" y="1139.0" width="1.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1050.9" y="1150.0"></text>
</g>
<g>
<title>NodeHash::grow() (4 samples, 0.14%)</title><rect x="1047.9" y="1123.0" width="1.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1050.9" y="1134.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (4 samples, 0.14%)</title><rect x="1047.9" y="1107.0" width="1.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1050.9" y="1118.0"></text>
</g>
<g>
<title>__GI___libc_malloc (4 samples, 0.14%)</title><rect x="1047.9" y="1091.0" width="1.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1050.9" y="1102.0"></text>
</g>
<g>
<title>Type_Array::grow(unsigned int) (1 samples, 0.04%)</title><rect x="1049.6" y="1139.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1052.6" y="1150.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="1049.6" y="1123.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1052.6" y="1134.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="1049.6" y="1107.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1052.6" y="1118.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="1049.6" y="1091.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1052.6" y="1102.0"></text>
</g>
<g>
<title>PhaseIterGVN::PhaseIterGVN(PhaseGVN*) (1 samples, 0.04%)</title><rect x="1050.1" y="1187.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1053.1" y="1198.0"></text>
</g>
<g>
<title>PhaseIterGVN::add_users_to_worklist(Node*) (1 samples, 0.04%)</title><rect x="1050.1" y="1171.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1053.1" y="1182.0"></text>
</g>
<g>
<title>Node_Array::grow(unsigned int) (1 samples, 0.04%)</title><rect x="1050.1" y="1155.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1053.1" y="1166.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="1050.1" y="1139.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1053.1" y="1150.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="1050.1" y="1123.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1053.1" y="1134.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="1050.1" y="1107.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1053.1" y="1118.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (2 samples, 0.07%)</title><rect x="1050.5" y="1187.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1053.5" y="1198.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (2 samples, 0.07%)</title><rect x="1050.5" y="1171.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1053.5" y="1182.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (1 samples, 0.04%)</title><rect x="1050.5" y="1155.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1053.5" y="1166.0"></text>
</g>
<g>
<title>NodeHash::grow() (1 samples, 0.04%)</title><rect x="1050.5" y="1139.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1053.5" y="1150.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="1050.5" y="1123.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1053.5" y="1134.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="1050.5" y="1107.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1053.5" y="1118.0"></text>
</g>
<g>
<title>PhiNode::Value(PhaseGVN*) const (1 samples, 0.04%)</title><rect x="1050.9" y="1155.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1053.9" y="1166.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.04%)</title><rect x="1050.9" y="1139.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1053.9" y="1150.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.04%)</title><rect x="1050.9" y="1123.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1053.9" y="1134.0"></text>
</g>
<g>
<title>Dict::doubhash() (1 samples, 0.04%)</title><rect x="1050.9" y="1107.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1053.9" y="1118.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="1050.9" y="1091.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1053.9" y="1102.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="1050.9" y="1075.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1053.9" y="1086.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="1050.9" y="1059.0" width="0.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1053.9" y="1070.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_macro_nodes() (1 samples, 0.04%)</title><rect x="1051.3" y="1187.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1054.3" y="1198.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.04%)</title><rect x="1051.3" y="1171.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1054.3" y="1182.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.04%)</title><rect x="1051.3" y="1155.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1054.3" y="1166.0"></text>
</g>
<g>
<title>URShiftLNode::Ideal(PhaseGVN*, bool) (1 samples, 0.04%)</title><rect x="1051.3" y="1139.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1054.3" y="1150.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.04%)</title><rect x="1051.3" y="1123.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1054.3" y="1134.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.04%)</title><rect x="1051.3" y="1107.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1054.3" y="1118.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.04%)</title><rect x="1051.3" y="1091.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1054.3" y="1102.0"></text>
</g>
<g>
<title>Dict::doubhash() (1 samples, 0.04%)</title><rect x="1051.3" y="1075.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1054.3" y="1086.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="1051.3" y="1059.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1054.3" y="1070.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="1051.3" y="1043.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1054.3" y="1054.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="1051.3" y="1027.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1054.3" y="1038.0"></text>
</g>
<g>
<title>PhaseRenumberLive::PhaseRenumberLive(PhaseGVN*, Unique_Node_List*, Unique_Node_List*, Phase::PhaseNumber) (4 samples, 0.14%)</title><rect x="1051.7" y="1187.0" width="1.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1054.7" y="1198.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (2 samples, 0.07%)</title><rect x="1051.7" y="1171.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1054.7" y="1182.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (2 samples, 0.07%)</title><rect x="1051.7" y="1155.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1054.7" y="1166.0"></text>
</g>
<g>
<title>__GI___libc_malloc (2 samples, 0.07%)</title><rect x="1051.7" y="1139.0" width="0.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1054.7" y="1150.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (2 samples, 0.07%)</title><rect x="1052.6" y="1171.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1055.6" y="1182.0"></text>
</g>
<g>
<title>Compile::identify_useful_nodes(Unique_Node_List&amp;) (2 samples, 0.07%)</title><rect x="1052.6" y="1155.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1055.6" y="1166.0"></text>
</g>
<g>
<title>Node_Array::grow(unsigned int) (2 samples, 0.07%)</title><rect x="1052.6" y="1139.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1055.6" y="1150.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (2 samples, 0.07%)</title><rect x="1052.6" y="1123.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1055.6" y="1134.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (2 samples, 0.07%)</title><rect x="1052.6" y="1107.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1055.6" y="1118.0"></text>
</g>
<g>
<title>__GI___libc_malloc (2 samples, 0.07%)</title><rect x="1052.6" y="1091.0" width="0.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1055.6" y="1102.0"></text>
</g>
<g>
<title>Compile::inline_string_calls(bool) (4 samples, 0.14%)</title><rect x="1053.4" y="1203.0" width="1.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1056.4" y="1214.0"></text>
</g>
<g>
<title>LateInlineCallGenerator::do_late_inline() (2 samples, 0.07%)</title><rect x="1053.4" y="1187.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1056.4" y="1198.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.07%)</title><rect x="1053.4" y="1171.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1056.4" y="1182.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.07%)</title><rect x="1053.4" y="1155.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1056.4" y="1166.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.07%)</title><rect x="1053.4" y="1139.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1056.4" y="1150.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.07%)</title><rect x="1053.4" y="1123.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1056.4" y="1134.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.07%)</title><rect x="1053.4" y="1107.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1056.4" y="1118.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.07%)</title><rect x="1053.4" y="1091.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1056.4" y="1102.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.07%)</title><rect x="1053.4" y="1075.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1056.4" y="1086.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.07%)</title><rect x="1053.4" y="1059.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1056.4" y="1070.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.07%)</title><rect x="1053.4" y="1043.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1056.4" y="1054.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.07%)</title><rect x="1053.4" y="1027.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1056.4" y="1038.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.07%)</title><rect x="1053.4" y="1011.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1056.4" y="1022.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.07%)</title><rect x="1053.4" y="995.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1056.4" y="1006.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.07%)</title><rect x="1053.4" y="979.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1056.4" y="990.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.07%)</title><rect x="1053.4" y="963.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1056.4" y="974.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.07%)</title><rect x="1053.4" y="947.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1056.4" y="958.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.07%)</title><rect x="1053.4" y="931.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1056.4" y="942.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.07%)</title><rect x="1053.4" y="915.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1056.4" y="926.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.07%)</title><rect x="1053.4" y="899.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1056.4" y="910.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.07%)</title><rect x="1053.4" y="883.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1056.4" y="894.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.07%)</title><rect x="1053.4" y="867.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1056.4" y="878.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.07%)</title><rect x="1053.4" y="851.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1056.4" y="862.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.07%)</title><rect x="1053.4" y="835.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1056.4" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.07%)</title><rect x="1053.4" y="819.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1056.4" y="830.0"></text>
</g>
<g>
<title>Parse::do_if(BoolTest::mask, Node*) (2 samples, 0.07%)</title><rect x="1053.4" y="803.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1056.4" y="814.0"></text>
</g>
<g>
<title>Node::Node(Node*, Node*) (1 samples, 0.04%)</title><rect x="1053.4" y="787.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1056.4" y="798.0"></text>
</g>
<g>
<title>Compile::grow_node_notes(GrowableArray&lt;Node_Notes*&gt;*, int) (1 samples, 0.04%)</title><rect x="1053.4" y="771.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1056.4" y="782.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="1053.4" y="755.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1056.4" y="766.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="1053.4" y="739.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1056.4" y="750.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.04%)</title><rect x="1053.9" y="787.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1056.9" y="798.0"></text>
</g>
<g>
<title>Type_Array::grow(unsigned int) (1 samples, 0.04%)</title><rect x="1053.9" y="771.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1056.9" y="782.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="1053.9" y="755.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1056.9" y="766.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="1053.9" y="739.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1056.9" y="750.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="1053.9" y="723.0" width="0.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1056.9" y="734.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (2 samples, 0.07%)</title><rect x="1054.3" y="1187.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1057.3" y="1198.0"></text>
</g>
<g>
<title>Compile::identify_useful_nodes(Unique_Node_List&amp;) (2 samples, 0.07%)</title><rect x="1054.3" y="1171.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1057.3" y="1182.0"></text>
</g>
<g>
<title>Node_Array::grow(unsigned int) (2 samples, 0.07%)</title><rect x="1054.3" y="1155.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1057.3" y="1166.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (2 samples, 0.07%)</title><rect x="1054.3" y="1139.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1057.3" y="1150.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (2 samples, 0.07%)</title><rect x="1054.3" y="1123.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1057.3" y="1134.0"></text>
</g>
<g>
<title>__GI___libc_malloc (2 samples, 0.07%)</title><rect x="1054.3" y="1107.0" width="0.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1057.3" y="1118.0"></text>
</g>
<g>
<title>NodeHash::NodeHash(Arena*, unsigned int) (1 samples, 0.04%)</title><rect x="1055.1" y="1203.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1058.1" y="1214.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="1055.1" y="1187.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1058.1" y="1198.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="1055.1" y="1171.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1058.1" y="1182.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (12 samples, 0.43%)</title><rect x="1055.6" y="1203.0" width="5.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1058.6" y="1214.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (12 samples, 0.43%)</title><rect x="1055.6" y="1187.0" width="5.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1058.6" y="1198.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (12 samples, 0.43%)</title><rect x="1055.6" y="1171.0" width="5.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1058.6" y="1182.0"></text>
</g>
<g>
<title>Parse::do_one_block() (12 samples, 0.43%)</title><rect x="1055.6" y="1155.0" width="5.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1058.6" y="1166.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (12 samples, 0.43%)</title><rect x="1055.6" y="1139.0" width="5.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1058.6" y="1150.0"></text>
</g>
<g>
<title>Parse::do_call() (12 samples, 0.43%)</title><rect x="1055.6" y="1123.0" width="5.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1058.6" y="1134.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (12 samples, 0.43%)</title><rect x="1055.6" y="1107.0" width="5.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1058.6" y="1118.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (12 samples, 0.43%)</title><rect x="1055.6" y="1091.0" width="5.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1058.6" y="1102.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (12 samples, 0.43%)</title><rect x="1055.6" y="1075.0" width="5.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1058.6" y="1086.0"></text>
</g>
<g>
<title>Parse::do_one_block() (12 samples, 0.43%)</title><rect x="1055.6" y="1059.0" width="5.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1058.6" y="1070.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (12 samples, 0.43%)</title><rect x="1055.6" y="1043.0" width="5.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1058.6" y="1054.0"></text>
</g>
<g>
<title>Parse::do_call() (12 samples, 0.43%)</title><rect x="1055.6" y="1027.0" width="5.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1058.6" y="1038.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (12 samples, 0.43%)</title><rect x="1055.6" y="1011.0" width="5.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1058.6" y="1022.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (12 samples, 0.43%)</title><rect x="1055.6" y="995.0" width="5.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1058.6" y="1006.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (11 samples, 0.39%)</title><rect x="1055.6" y="979.0" width="4.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1058.6" y="990.0"></text>
</g>
<g>
<title>Parse::do_one_block() (11 samples, 0.39%)</title><rect x="1055.6" y="963.0" width="4.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1058.6" y="974.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (11 samples, 0.39%)</title><rect x="1055.6" y="947.0" width="4.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1058.6" y="958.0"></text>
</g>
<g>
<title>Parse::do_call() (11 samples, 0.39%)</title><rect x="1055.6" y="931.0" width="4.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1058.6" y="942.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.14%)</title><rect x="1055.6" y="915.0" width="1.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1058.6" y="926.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.14%)</title><rect x="1055.6" y="899.0" width="1.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1058.6" y="910.0"></text>
</g>
<g>
<title>Parse::build_exits() (2 samples, 0.07%)</title><rect x="1055.6" y="883.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1058.6" y="894.0"></text>
</g>
<g>
<title>Node::Node(unsigned int) (1 samples, 0.04%)</title><rect x="1055.6" y="867.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1058.6" y="878.0"></text>
</g>
<g>
<title>Compile::grow_node_notes(GrowableArray&lt;Node_Notes*&gt;*, int) (1 samples, 0.04%)</title><rect x="1055.6" y="851.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1058.6" y="862.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="1055.6" y="835.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1058.6" y="846.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="1055.6" y="819.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1058.6" y="830.0"></text>
</g>
<g>
<title>Type_Array::grow(unsigned int) (1 samples, 0.04%)</title><rect x="1056.0" y="867.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1059.0" y="878.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="1056.0" y="851.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1059.0" y="862.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="1056.0" y="835.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1059.0" y="846.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="1056.0" y="819.0" width="0.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1059.0" y="830.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.07%)</title><rect x="1056.4" y="883.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1059.4" y="894.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.07%)</title><rect x="1056.4" y="867.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1059.4" y="878.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.07%)</title><rect x="1056.4" y="851.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1059.4" y="862.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.04%)</title><rect x="1056.4" y="835.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1059.4" y="846.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="1056.4" y="819.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1059.4" y="830.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.04%)</title><rect x="1056.4" y="803.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1059.4" y="814.0"></text>
</g>
<g>
<title>GraphKit::set_map_clone(SafePointNode*) (1 samples, 0.04%)</title><rect x="1056.4" y="787.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1059.4" y="798.0"></text>
</g>
<g>
<title>GraphKit::clone_map() (1 samples, 0.04%)</title><rect x="1056.4" y="771.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1059.4" y="782.0"></text>
</g>
<g>
<title>Type_Array::grow(unsigned int) (1 samples, 0.04%)</title><rect x="1056.4" y="755.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1059.4" y="766.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="1056.4" y="739.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1059.4" y="750.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="1056.4" y="723.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1059.4" y="734.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="1056.4" y="707.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1059.4" y="718.0"></text>
</g>
<g>
<title>Parse::do_if(BoolTest::mask, Node*) (1 samples, 0.04%)</title><rect x="1056.8" y="835.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1059.8" y="846.0"></text>
</g>
<g>
<title>Parse::adjust_map_after_if(BoolTest::mask, Node*, float, Parse::Block*, Parse::Block*) (1 samples, 0.04%)</title><rect x="1056.8" y="819.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1059.8" y="830.0"></text>
</g>
<g>
<title>GraphKit::add_predicate(int) (1 samples, 0.04%)</title><rect x="1056.8" y="803.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1059.8" y="814.0"></text>
</g>
<g>
<title>GraphKit::add_predicate_impl(Deoptimization::DeoptReason, int) [clone .part.186] (1 samples, 0.04%)</title><rect x="1056.8" y="787.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1059.8" y="798.0"></text>
</g>
<g>
<title>GraphKit::clone_map() (1 samples, 0.04%)</title><rect x="1056.8" y="771.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1059.8" y="782.0"></text>
</g>
<g>
<title>Type_Array::grow(unsigned int) (1 samples, 0.04%)</title><rect x="1056.8" y="755.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1059.8" y="766.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="1056.8" y="739.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1059.8" y="750.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="1056.8" y="723.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1059.8" y="734.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="1056.8" y="707.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1059.8" y="718.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (7 samples, 0.25%)</title><rect x="1057.2" y="915.0" width="3.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1060.2" y="926.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.07%)</title><rect x="1057.2" y="899.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1060.2" y="910.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.07%)</title><rect x="1057.2" y="883.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1060.2" y="894.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.07%)</title><rect x="1057.2" y="867.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1060.2" y="878.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.07%)</title><rect x="1057.2" y="851.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1060.2" y="862.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.07%)</title><rect x="1057.2" y="835.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1060.2" y="846.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.07%)</title><rect x="1057.2" y="819.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1060.2" y="830.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.07%)</title><rect x="1057.2" y="803.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1060.2" y="814.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.07%)</title><rect x="1057.2" y="787.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1060.2" y="798.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.07%)</title><rect x="1057.2" y="771.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1060.2" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.07%)</title><rect x="1057.2" y="755.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1060.2" y="766.0"></text>
</g>
<g>
<title>Parse::do_exceptions() (2 samples, 0.07%)</title><rect x="1057.2" y="739.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1060.2" y="750.0"></text>
</g>
<g>
<title>Parse::catch_inline_exceptions(SafePointNode*) (2 samples, 0.07%)</title><rect x="1057.2" y="723.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1060.2" y="734.0"></text>
</g>
<g>
<title>Parse::throw_to_exit(SafePointNode*) (2 samples, 0.07%)</title><rect x="1057.2" y="707.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1060.2" y="718.0"></text>
</g>
<g>
<title>GraphKit::set_map_clone(SafePointNode*) (2 samples, 0.07%)</title><rect x="1057.2" y="691.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1060.2" y="702.0"></text>
</g>
<g>
<title>GraphKit::clone_map() (2 samples, 0.07%)</title><rect x="1057.2" y="675.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1060.2" y="686.0"></text>
</g>
<g>
<title>Node::clone() const (1 samples, 0.04%)</title><rect x="1057.2" y="659.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1060.2" y="670.0"></text>
</g>
<g>
<title>Compile::copy_node_notes_to(Node*, Node*) (1 samples, 0.04%)</title><rect x="1057.2" y="643.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1060.2" y="654.0"></text>
</g>
<g>
<title>Compile::grow_node_notes(GrowableArray&lt;Node_Notes*&gt;*, int) (1 samples, 0.04%)</title><rect x="1057.2" y="627.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1060.2" y="638.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="1057.2" y="611.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1060.2" y="622.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="1057.2" y="595.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1060.2" y="606.0"></text>
</g>
<g>
<title>Type_Array::grow(unsigned int) (1 samples, 0.04%)</title><rect x="1057.7" y="659.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1060.7" y="670.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="1057.7" y="643.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1060.7" y="654.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="1057.7" y="627.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1060.7" y="638.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="1057.7" y="611.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1060.7" y="622.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (5 samples, 0.18%)</title><rect x="1058.1" y="899.0" width="2.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1061.1" y="910.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.18%)</title><rect x="1058.1" y="883.0" width="2.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1061.1" y="894.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.18%)</title><rect x="1058.1" y="867.0" width="2.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1061.1" y="878.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.18%)</title><rect x="1058.1" y="851.0" width="2.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1061.1" y="862.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.18%)</title><rect x="1058.1" y="835.0" width="2.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1061.1" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.18%)</title><rect x="1058.1" y="819.0" width="2.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1061.1" y="830.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.18%)</title><rect x="1058.1" y="803.0" width="2.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1061.1" y="814.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.18%)</title><rect x="1058.1" y="787.0" width="2.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1061.1" y="798.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.18%)</title><rect x="1058.1" y="771.0" width="2.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1061.1" y="782.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.18%)</title><rect x="1058.1" y="755.0" width="2.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1061.1" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.18%)</title><rect x="1058.1" y="739.0" width="2.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1061.1" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.18%)</title><rect x="1058.1" y="723.0" width="2.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1061.1" y="734.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.18%)</title><rect x="1058.1" y="707.0" width="2.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1061.1" y="718.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.18%)</title><rect x="1058.1" y="691.0" width="2.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1061.1" y="702.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.18%)</title><rect x="1058.1" y="675.0" width="2.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1061.1" y="686.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.18%)</title><rect x="1058.1" y="659.0" width="2.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1061.1" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.18%)</title><rect x="1058.1" y="643.0" width="2.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1061.1" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.18%)</title><rect x="1058.1" y="627.0" width="2.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1061.1" y="638.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.18%)</title><rect x="1058.1" y="611.0" width="2.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1061.1" y="622.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.18%)</title><rect x="1058.1" y="595.0" width="2.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1061.1" y="606.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.18%)</title><rect x="1058.1" y="579.0" width="2.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1061.1" y="590.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.14%)</title><rect x="1058.1" y="563.0" width="1.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1061.1" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.14%)</title><rect x="1058.1" y="547.0" width="1.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1061.1" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.14%)</title><rect x="1058.1" y="531.0" width="1.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1061.1" y="542.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.11%)</title><rect x="1058.1" y="515.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1061.1" y="526.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.11%)</title><rect x="1058.1" y="499.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1061.1" y="510.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.11%)</title><rect x="1058.1" y="483.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1061.1" y="494.0"></text>
</g>
<g>
<title>Parse::build_exits() (2 samples, 0.07%)</title><rect x="1058.1" y="467.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1061.1" y="478.0"></text>
</g>
<g>
<title>GraphKit::clone_map() (2 samples, 0.07%)</title><rect x="1058.1" y="451.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1061.1" y="462.0"></text>
</g>
<g>
<title>MergeMemNode::make(Node*) (1 samples, 0.04%)</title><rect x="1058.1" y="435.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1061.1" y="446.0"></text>
</g>
<g>
<title>MergeMemNode::MergeMemNode(Node*) (1 samples, 0.04%)</title><rect x="1058.1" y="419.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1061.1" y="430.0"></text>
</g>
<g>
<title>Node::Node(unsigned int) (1 samples, 0.04%)</title><rect x="1058.1" y="403.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1061.1" y="414.0"></text>
</g>
<g>
<title>Compile::grow_node_notes(GrowableArray&lt;Node_Notes*&gt;*, int) (1 samples, 0.04%)</title><rect x="1058.1" y="387.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1061.1" y="398.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="1058.1" y="371.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1061.1" y="382.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="1058.1" y="355.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1061.1" y="366.0"></text>
</g>
<g>
<title>Type_Array::grow(unsigned int) (1 samples, 0.04%)</title><rect x="1058.5" y="435.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1061.5" y="446.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="1058.5" y="419.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1061.5" y="430.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="1058.5" y="403.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1061.5" y="414.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="1058.5" y="387.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1061.5" y="398.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.04%)</title><rect x="1058.9" y="467.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1061.9" y="478.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.04%)</title><rect x="1058.9" y="451.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1061.9" y="462.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.04%)</title><rect x="1058.9" y="435.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1061.9" y="446.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.04%)</title><rect x="1058.9" y="419.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1061.9" y="430.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="1058.9" y="403.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1061.9" y="414.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.04%)</title><rect x="1058.9" y="387.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1061.9" y="398.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.04%)</title><rect x="1058.9" y="371.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1061.9" y="382.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.04%)</title><rect x="1058.9" y="355.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1061.9" y="366.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.04%)</title><rect x="1058.9" y="339.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1061.9" y="350.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.04%)</title><rect x="1058.9" y="323.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1061.9" y="334.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="1058.9" y="307.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1061.9" y="318.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.04%)</title><rect x="1058.9" y="291.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1061.9" y="302.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.04%)</title><rect x="1058.9" y="275.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1061.9" y="286.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.04%)</title><rect x="1058.9" y="259.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1061.9" y="270.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.04%)</title><rect x="1058.9" y="243.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1061.9" y="254.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.04%)</title><rect x="1058.9" y="227.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1061.9" y="238.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="1058.9" y="211.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1061.9" y="222.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.04%)</title><rect x="1058.9" y="195.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1061.9" y="206.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.04%)</title><rect x="1058.9" y="179.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1061.9" y="190.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.04%)</title><rect x="1058.9" y="163.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1061.9" y="174.0"></text>
</g>
<g>
<title>Parse::do_exceptions() (1 samples, 0.04%)</title><rect x="1058.9" y="147.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1061.9" y="158.0"></text>
</g>
<g>
<title>Parse::throw_to_exit(SafePointNode*) (1 samples, 0.04%)</title><rect x="1058.9" y="131.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1061.9" y="142.0"></text>
</g>
<g>
<title>GraphKit::combine_exception_states(SafePointNode*, SafePointNode*) (1 samples, 0.04%)</title><rect x="1058.9" y="115.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1061.9" y="126.0"></text>
</g>
<g>
<title>Unique_Node_List::push(Node*) [clone .constprop.198] (1 samples, 0.04%)</title><rect x="1058.9" y="99.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1061.9" y="110.0"></text>
</g>
<g>
<title>Node_Array::grow(unsigned int) (1 samples, 0.04%)</title><rect x="1058.9" y="83.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1061.9" y="94.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="1058.9" y="67.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1061.9" y="78.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="1058.9" y="51.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1061.9" y="62.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="1058.9" y="35.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1061.9" y="46.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.04%)</title><rect x="1059.4" y="515.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1062.4" y="526.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.04%)</title><rect x="1059.4" y="499.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1062.4" y="510.0"></text>
</g>
<g>
<title>GraphKit::make_constant_from_field(ciField*, Node*) (1 samples, 0.04%)</title><rect x="1059.4" y="483.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1062.4" y="494.0"></text>
</g>
<g>
<title>Type::make_constant_from_field(ciField*, ciInstance*, BasicType, bool) (1 samples, 0.04%)</title><rect x="1059.4" y="467.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1062.4" y="478.0"></text>
</g>
<g>
<title>Type::make_from_constant(ciConstant, bool, int, bool, bool) (1 samples, 0.04%)</title><rect x="1059.4" y="451.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1062.4" y="462.0"></text>
</g>
<g>
<title>TypeOopPtr::make_from_constant(ciObject*, bool) (1 samples, 0.04%)</title><rect x="1059.4" y="435.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1062.4" y="446.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.04%)</title><rect x="1059.4" y="419.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1062.4" y="430.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.04%)</title><rect x="1059.4" y="403.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1062.4" y="414.0"></text>
</g>
<g>
<title>Dict::doubhash() (1 samples, 0.04%)</title><rect x="1059.4" y="387.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1062.4" y="398.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="1059.4" y="371.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1062.4" y="382.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="1059.4" y="355.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1062.4" y="366.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="1059.4" y="339.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1062.4" y="350.0"></text>
</g>
<g>
<title>Parse::do_exits() (1 samples, 0.04%)</title><rect x="1059.8" y="563.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1062.8" y="574.0"></text>
</g>
<g>
<title>GraphKit::use_exception_state(SafePointNode*) (1 samples, 0.04%)</title><rect x="1059.8" y="547.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1062.8" y="558.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.04%)</title><rect x="1059.8" y="531.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1062.8" y="542.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (1 samples, 0.04%)</title><rect x="1059.8" y="515.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1062.8" y="526.0"></text>
</g>
<g>
<title>NodeHash::grow() (1 samples, 0.04%)</title><rect x="1059.8" y="499.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1062.8" y="510.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="1059.8" y="483.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1062.8" y="494.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="1059.8" y="467.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1062.8" y="478.0"></text>
</g>
<g>
<title>Parse::merge_common(Parse::Block*, int) (1 samples, 0.04%)</title><rect x="1060.2" y="979.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1063.2" y="990.0"></text>
</g>
<g>
<title>Type_Array::grow(unsigned int) (1 samples, 0.04%)</title><rect x="1060.2" y="963.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1063.2" y="974.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="1060.2" y="947.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1063.2" y="958.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="1060.2" y="931.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1063.2" y="942.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="1060.2" y="915.0" width="0.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1063.2" y="926.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (3 samples, 0.11%)</title><rect x="1060.6" y="1203.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1063.6" y="1214.0"></text>
</g>
<g>
<title>Compile::identify_useful_nodes(Unique_Node_List&amp;) (3 samples, 0.11%)</title><rect x="1060.6" y="1187.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1063.6" y="1198.0"></text>
</g>
<g>
<title>Node_Array::grow(unsigned int) (3 samples, 0.11%)</title><rect x="1060.6" y="1171.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1063.6" y="1182.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (3 samples, 0.11%)</title><rect x="1060.6" y="1155.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1063.6" y="1166.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (3 samples, 0.11%)</title><rect x="1060.6" y="1139.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1063.6" y="1150.0"></text>
</g>
<g>
<title>__GI___libc_malloc (3 samples, 0.11%)</title><rect x="1060.6" y="1123.0" width="1.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1063.6" y="1134.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState) (65 samples, 2.33%)</title><rect x="1061.9" y="1203.0" width="27.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1064.9" y="1214.0">c..</text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle const&amp;, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (51 samples, 1.83%)</title><rect x="1061.9" y="1187.0" width="21.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1064.9" y="1198.0">n..</text>
</g>
<g>
<title>InstanceKlass::add_dependent_nmethod(nmethod*) (25 samples, 0.90%)</title><rect x="1061.9" y="1171.0" width="10.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1064.9" y="1182.0"></text>
</g>
<g>
<title>DependencyContext::add_dependent_nmethod(nmethod*, bool) (25 samples, 0.90%)</title><rect x="1061.9" y="1155.0" width="10.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1064.9" y="1166.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, AllocFailStrategy::AllocFailEnum) (25 samples, 0.90%)</title><rect x="1061.9" y="1139.0" width="10.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1064.9" y="1150.0"></text>
</g>
<g>
<title>__GI___libc_malloc (25 samples, 0.90%)</title><rect x="1061.9" y="1123.0" width="10.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1064.9" y="1134.0"></text>
</g>
<g>
<title>nmethod::nmethod(Method*, CompilerType, int, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (26 samples, 0.93%)</title><rect x="1072.5" y="1171.0" width="11.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1075.5" y="1182.0"></text>
</g>
<g>
<title>CompiledMethod::CompiledMethod(Method*, char const*, CompilerType, int, int, CodeBuffer*, int, int, OopMapSet*, bool) (14 samples, 0.50%)</title><rect x="1072.5" y="1155.0" width="5.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1075.5" y="1166.0"></text>
</g>
<g>
<title>CodeBlob::CodeBlob(char const*, CompilerType, CodeBlobLayout const&amp;, CodeBuffer*, int, int, OopMapSet*, bool) (14 samples, 0.50%)</title><rect x="1072.5" y="1139.0" width="5.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1075.5" y="1150.0"></text>
</g>
<g>
<title>ImmutableOopMapSet::build_from(OopMapSet const*) (14 samples, 0.50%)</title><rect x="1072.5" y="1123.0" width="5.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1075.5" y="1134.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, AllocFailStrategy::AllocFailEnum) (14 samples, 0.50%)</title><rect x="1072.5" y="1107.0" width="5.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1075.5" y="1118.0"></text>
</g>
<g>
<title>__GI___libc_malloc (14 samples, 0.50%)</title><rect x="1072.5" y="1091.0" width="5.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1075.5" y="1102.0"></text>
</g>
<g>
<title>G1CollectedHeap::register_nmethod(nmethod*) (12 samples, 0.43%)</title><rect x="1078.4" y="1155.0" width="5.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1081.4" y="1166.0"></text>
</g>
<g>
<title>nmethod::oops_do(OopClosure*, bool) (12 samples, 0.43%)</title><rect x="1078.4" y="1139.0" width="5.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1081.4" y="1150.0"></text>
</g>
<g>
<title>G1CodeRootSet::add(nmethod*) (12 samples, 0.43%)</title><rect x="1078.4" y="1123.0" width="5.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1081.4" y="1134.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, NativeCallStack const&amp;, AllocFailStrategy::AllocFailEnum) (12 samples, 0.43%)</title><rect x="1078.4" y="1107.0" width="5.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1081.4" y="1118.0"></text>
</g>
<g>
<title>__GI___libc_malloc (12 samples, 0.43%)</title><rect x="1078.4" y="1091.0" width="5.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1081.4" y="1102.0"></text>
</g>
<g>
<title>nmethod::post_compiled_method_load_event() (14 samples, 0.50%)</title><rect x="1083.5" y="1187.0" width="5.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1086.5" y="1198.0"></text>
</g>
<g>
<title>JvmtiDeferredEventQueue::enqueue(JvmtiDeferredEvent const&amp;) (14 samples, 0.50%)</title><rect x="1083.5" y="1171.0" width="5.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1086.5" y="1182.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, AllocFailStrategy::AllocFailEnum) (14 samples, 0.50%)</title><rect x="1083.5" y="1155.0" width="5.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1086.5" y="1166.0"></text>
</g>
<g>
<title>__GI___libc_malloc (14 samples, 0.50%)</title><rect x="1083.5" y="1139.0" width="5.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1086.5" y="1150.0"></text>
</g>
<g>
<title>CompileTask::print(outputStream*, char const*, bool, bool) (14 samples, 0.50%)</title><rect x="1089.4" y="1235.0" width="5.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1092.4" y="1246.0"></text>
</g>
<g>
<title>Method::print_short_name(outputStream*) (14 samples, 0.50%)</title><rect x="1089.4" y="1219.0" width="5.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1092.4" y="1230.0"></text>
</g>
<g>
<title>Symbol::print_symbol_on(outputStream*) const (14 samples, 0.50%)</title><rect x="1089.4" y="1203.0" width="5.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1092.4" y="1214.0"></text>
</g>
<g>
<title>__GI___libc_malloc (14 samples, 0.50%)</title><rect x="1089.4" y="1187.0" width="5.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1092.4" y="1198.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (15 samples, 0.54%)</title><rect x="1095.3" y="1267.0" width="6.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1098.3" y="1278.0"></text>
</g>
<g>
<title>JvmtiDeferredEvent::post() (15 samples, 0.54%)</title><rect x="1095.3" y="1251.0" width="6.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1098.3" y="1262.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(nmethod*) (15 samples, 0.54%)</title><rect x="1095.3" y="1235.0" width="6.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1098.3" y="1246.0"></text>
</g>
<g>
<title>JvmtiCodeBlobEvents::build_jvmti_addr_location_map(nmethod*, _jvmtiAddrLocationMap**, int*) (14 samples, 0.50%)</title><rect x="1095.3" y="1219.0" width="5.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1098.3" y="1230.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, AllocFailStrategy::AllocFailEnum) (14 samples, 0.50%)</title><rect x="1095.3" y="1203.0" width="5.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1098.3" y="1214.0"></text>
</g>
<g>
<title>__GI___libc_malloc (14 samples, 0.50%)</title><rect x="1095.3" y="1187.0" width="5.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1098.3" y="1198.0"></text>
</g>
<g>
<title>create_inline_record(nmethod*) (1 samples, 0.04%)</title><rect x="1101.2" y="1219.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1104.2" y="1230.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="1101.2" y="1203.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1104.2" y="1214.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="1101.2" y="1187.0" width="0.4" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1104.2" y="1198.0"></text>
</g>
<g>
<title>attach_listener_thread_entry(JavaThread*, Thread*) (7 samples, 0.25%)</title><rect x="1101.6" y="1267.0" width="3.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1104.6" y="1278.0"></text>
</g>
<g>
<title>AttachListener::dequeue() (1 samples, 0.04%)</title><rect x="1101.6" y="1251.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1104.6" y="1262.0"></text>
</g>
<g>
<title>LinuxAttachListener::dequeue() (1 samples, 0.04%)</title><rect x="1101.6" y="1235.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1104.6" y="1246.0"></text>
</g>
<g>
<title>LinuxAttachListener::read_request(int) (1 samples, 0.04%)</title><rect x="1101.6" y="1219.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1104.6" y="1230.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="1101.6" y="1203.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1104.6" y="1214.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="1101.6" y="1187.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1104.6" y="1198.0"></text>
</g>
<g>
<title>bufferedStream::bufferedStream(unsigned long, unsigned long) (1 samples, 0.04%)</title><rect x="1102.1" y="1251.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1105.1" y="1262.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="1102.1" y="1235.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1105.1" y="1246.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="1102.1" y="1219.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1105.1" y="1230.0"></text>
</g>
<g>
<title>load_agent(AttachOperation*, outputStream*) (5 samples, 0.18%)</title><rect x="1102.5" y="1251.0" width="2.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1105.5" y="1262.0"></text>
</g>
<g>
<title>JvmtiExport::load_agent_library(char const*, char const*, char const*, outputStream*) (5 samples, 0.18%)</title><rect x="1102.5" y="1235.0" width="2.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1105.5" y="1246.0"></text>
</g>
<g>
<title>AgentLibrary::AgentLibrary(char const*, char const*, bool, void*, bool) (2 samples, 0.07%)</title><rect x="1102.5" y="1219.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1105.5" y="1230.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, AllocFailStrategy::AllocFailEnum) (2 samples, 0.07%)</title><rect x="1102.5" y="1203.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1105.5" y="1214.0"></text>
</g>
<g>
<title>__GI___libc_malloc (2 samples, 0.07%)</title><rect x="1102.5" y="1187.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1105.5" y="1198.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="1103.3" y="1219.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1106.3" y="1230.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="1103.3" y="1203.0" width="0.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1106.3" y="1214.0"></text>
</g>
<g>
<title>os::find_agent_function(AgentLibrary*, bool, char const**, unsigned long) (1 samples, 0.04%)</title><rect x="1103.8" y="1219.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1106.8" y="1230.0"></text>
</g>
<g>
<title>os::build_agent_function_name(char const*, char const*, bool) (1 samples, 0.04%)</title><rect x="1103.8" y="1203.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1106.8" y="1214.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, NativeCallStack const&amp;, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="1103.8" y="1187.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1106.8" y="1198.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="1103.8" y="1171.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1106.8" y="1182.0"></text>
</g>
<g>
<title>os::find_builtin_agent(AgentLibrary*, char const**, unsigned long) (1 samples, 0.04%)</title><rect x="1104.2" y="1219.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1107.2" y="1230.0"></text>
</g>
<g>
<title>os::build_agent_function_name(char const*, char const*, bool) (1 samples, 0.04%)</title><rect x="1104.2" y="1203.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1107.2" y="1214.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, NativeCallStack const&amp;, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="1104.2" y="1187.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1107.2" y="1198.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="1104.2" y="1171.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1107.2" y="1182.0"></text>
</g>
<g>
<title>VMThread::run() (202 samples, 7.24%)</title><rect x="1104.6" y="1299.0" width="85.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1107.6" y="1310.0">VMThread::..</text>
</g>
<g>
<title>VMThread::loop() (202 samples, 7.24%)</title><rect x="1104.6" y="1283.0" width="85.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1107.6" y="1294.0">VMThread::..</text>
</g>
<g>
<title>SafepointSynchronize::begin() (4 samples, 0.14%)</title><rect x="1104.6" y="1267.0" width="1.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1107.6" y="1278.0"></text>
</g>
<g>
<title>SafepointSynchronize::do_cleanup_tasks() (4 samples, 0.14%)</title><rect x="1104.6" y="1251.0" width="1.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1107.6" y="1262.0"></text>
</g>
<g>
<title>SubTasksDone::SubTasksDone(unsigned int) (4 samples, 0.14%)</title><rect x="1104.6" y="1235.0" width="1.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1107.6" y="1246.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, AllocFailStrategy::AllocFailEnum) (4 samples, 0.14%)</title><rect x="1104.6" y="1219.0" width="1.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1107.6" y="1230.0"></text>
</g>
<g>
<title>__GI___libc_malloc (4 samples, 0.14%)</title><rect x="1104.6" y="1203.0" width="1.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1107.6" y="1214.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.66] (198 samples, 7.09%)</title><rect x="1106.3" y="1267.0" width="83.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1109.3" y="1278.0">VMThread:..</text>
</g>
<g>
<title>VM_Operation::evaluate() (198 samples, 7.09%)</title><rect x="1106.3" y="1251.0" width="83.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1109.3" y="1262.0">VM_Operat..</text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (198 samples, 7.09%)</title><rect x="1106.3" y="1235.0" width="83.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1109.3" y="1246.0">VM_G1Coll..</text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (198 samples, 7.09%)</title><rect x="1106.3" y="1219.0" width="83.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1109.3" y="1230.0">G1Collect..</text>
</g>
<g>
<title>G1CollectedHeap::evacuate_collection_set(G1ParScanThreadStateSet*) (2 samples, 0.07%)</title><rect x="1106.3" y="1203.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1109.3" y="1214.0"></text>
</g>
<g>
<title>G1RootProcessor::G1RootProcessor(G1CollectedHeap*, unsigned int) (2 samples, 0.07%)</title><rect x="1106.3" y="1187.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1109.3" y="1198.0"></text>
</g>
<g>
<title>SubTasksDone::SubTasksDone(unsigned int) (2 samples, 0.07%)</title><rect x="1106.3" y="1171.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1109.3" y="1182.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, AllocFailStrategy::AllocFailEnum) (2 samples, 0.07%)</title><rect x="1106.3" y="1155.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1109.3" y="1166.0"></text>
</g>
<g>
<title>__GI___libc_malloc (2 samples, 0.07%)</title><rect x="1106.3" y="1139.0" width="0.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1109.3" y="1150.0"></text>
</g>
<g>
<title>G1CollectedHeap::free_collection_set(G1CollectionSet*, EvacuationInfo&amp;, unsigned long const*) (2 samples, 0.07%)</title><rect x="1107.1" y="1203.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1110.1" y="1214.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, AllocFailStrategy::AllocFailEnum) (2 samples, 0.07%)</title><rect x="1107.1" y="1187.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1110.1" y="1198.0"></text>
</g>
<g>
<title>__GI___libc_malloc (2 samples, 0.07%)</title><rect x="1107.1" y="1171.0" width="0.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1110.1" y="1182.0"></text>
</g>
<g>
<title>G1ParScanThreadStateSet::G1ParScanThreadStateSet(G1CollectedHeap*, unsigned int, unsigned long) (4 samples, 0.14%)</title><rect x="1108.0" y="1203.0" width="1.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1111.0" y="1214.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, AllocFailStrategy::AllocFailEnum) (4 samples, 0.14%)</title><rect x="1108.0" y="1187.0" width="1.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1111.0" y="1198.0"></text>
</g>
<g>
<title>__GI___libc_malloc (4 samples, 0.14%)</title><rect x="1108.0" y="1171.0" width="1.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1111.0" y="1182.0"></text>
</g>
<g>
<title>G1Policy::record_collection_pause_start(double) (188 samples, 6.74%)</title><rect x="1109.7" y="1203.0" width="79.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1112.7" y="1214.0">G1Policy:..</text>
</g>
<g>
<title>SurvRateGroup::stop_adding_regions() (188 samples, 6.74%)</title><rect x="1109.7" y="1187.0" width="79.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1112.7" y="1198.0">SurvRateG..</text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, AllocFailStrategy::AllocFailEnum) (94 samples, 3.37%)</title><rect x="1109.7" y="1171.0" width="39.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1112.7" y="1182.0">All..</text>
</g>
<g>
<title>__GI___libc_malloc (94 samples, 3.37%)</title><rect x="1109.7" y="1155.0" width="39.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1112.7" y="1166.0">__G..</text>
</g>
<g>
<title>TruncatedSeq::TruncatedSeq(int, double) (94 samples, 3.37%)</title><rect x="1149.4" y="1171.0" width="39.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1152.4" y="1182.0">Tru..</text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, AllocFailStrategy::AllocFailEnum) (94 samples, 3.37%)</title><rect x="1149.4" y="1155.0" width="39.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1152.4" y="1166.0">All..</text>
</g>
<g>
<title>__GI___libc_malloc (94 samples, 3.37%)</title><rect x="1149.4" y="1139.0" width="39.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1152.4" y="1150.0">__G..</text>
</g>
<g>
<title>G1Policy::transfer_survivors_to_cset(G1SurvivorRegions const*) (2 samples, 0.07%)</title><rect x="1189.2" y="1203.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1192.2" y="1214.0"></text>
</g>
<g>
<title>SurvRateGroup::stop_adding_regions() (2 samples, 0.07%)</title><rect x="1189.2" y="1187.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1192.2" y="1198.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="1189.2" y="1171.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1192.2" y="1182.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="1189.2" y="1155.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1192.2" y="1166.0"></text>
</g>
<g>
<title>TruncatedSeq::TruncatedSeq(int, double) (1 samples, 0.04%)</title><rect x="1189.6" y="1171.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1192.6" y="1182.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="1189.6" y="1155.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1192.6" y="1166.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="1189.6" y="1139.0" width="0.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1192.6" y="1150.0"></text>
</g>
</g>
</svg>
