<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1126" onload="init(evt)" viewBox="0 0 1200 1126" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1109"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1109"> </text>
<g id="frames">
<g>
<title>all (37 samples, 100.00%)</title><rect x="10.0" y="1075.0" width="1180.0" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="13.0" y="1086.0">all</text>
</g>
<g>
<title>java/awt/EventDispatchThread.run (13 samples, 35.14%)</title><rect x="10.0" y="1059.0" width="414.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="1070.0">java/awt/EventDispatchThread.run</text>
</g>
<g>
<title>java/awt/EventDispatchThread.pumpEvents (13 samples, 35.14%)</title><rect x="10.0" y="1043.0" width="414.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="1054.0">java/awt/EventDispatchThread.pumpEvents</text>
</g>
<g>
<title>java/awt/EventDispatchThread.pumpEvents (13 samples, 35.14%)</title><rect x="10.0" y="1027.0" width="414.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="1038.0">java/awt/EventDispatchThread.pumpEvents</text>
</g>
<g>
<title>java/awt/EventDispatchThread.pumpEventsForHierarchy (13 samples, 35.14%)</title><rect x="10.0" y="1011.0" width="414.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="1022.0">java/awt/EventDispatchThread.pumpEventsForHierarchy</text>
</g>
<g>
<title>java/awt/EventDispatchThread.pumpEventsForFilter (13 samples, 35.14%)</title><rect x="10.0" y="995.0" width="414.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="1006.0">java/awt/EventDispatchThread.pumpEventsForFilter</text>
</g>
<g>
<title>java/awt/EventDispatchThread.pumpOneEventForFilters (13 samples, 35.14%)</title><rect x="10.0" y="979.0" width="414.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="990.0">java/awt/EventDispatchThread.pumpOneEventForFilters</text>
</g>
<g>
<title>java/awt/EventQueue.dispatchEvent (13 samples, 35.14%)</title><rect x="10.0" y="963.0" width="414.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="974.0">java/awt/EventQueue.dispatchEvent</text>
</g>
<g>
<title>java/security/ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege (13 samples, 35.14%)</title><rect x="10.0" y="947.0" width="414.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="958.0">java/security/ProtectionDomain$JavaSecurityAccessImpl.doI..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (13 samples, 35.14%)</title><rect x="10.0" y="931.0" width="414.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="942.0">java/security/AccessController.doPrivileged</text>
</g>
<g>
<title>java/awt/EventQueue$4.run (3 samples, 8.11%)</title><rect x="10.0" y="915.0" width="95.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="926.0">java/awt/Ev..</text>
</g>
<g>
<title>java/awt/EventQueue$4.run (3 samples, 8.11%)</title><rect x="10.0" y="899.0" width="95.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="910.0">java/awt/Ev..</text>
</g>
<g>
<title>java/awt/EventQueue.dispatchEventImpl (3 samples, 8.11%)</title><rect x="10.0" y="883.0" width="95.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="894.0">java/awt/Ev..</text>
</g>
<g>
<title>java/awt/event/InvocationEvent.dispatch (3 samples, 8.11%)</title><rect x="10.0" y="867.0" width="95.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="878.0">java/awt/ev..</text>
</g>
<g>
<title>javax/swing/RepaintManager$ProcessingRunnable.run (3 samples, 8.11%)</title><rect x="10.0" y="851.0" width="95.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="862.0">javax/swing..</text>
</g>
<g>
<title>javax/swing/RepaintManager.prePaintDirtyRegions (3 samples, 8.11%)</title><rect x="10.0" y="835.0" width="95.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="846.0">javax/swing..</text>
</g>
<g>
<title>javax/swing/RepaintManager.paintDirtyRegions (3 samples, 8.11%)</title><rect x="10.0" y="819.0" width="95.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="830.0">javax/swing..</text>
</g>
<g>
<title>javax/swing/RepaintManager.paintDirtyRegions (3 samples, 8.11%)</title><rect x="10.0" y="803.0" width="95.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="814.0">javax/swing..</text>
</g>
<g>
<title>java/security/ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege (3 samples, 8.11%)</title><rect x="10.0" y="787.0" width="95.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="798.0">java/securi..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (3 samples, 8.11%)</title><rect x="10.0" y="771.0" width="95.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="782.0">java/securi..</text>
</g>
<g>
<title>javax/swing/RepaintManager$4.run (3 samples, 8.11%)</title><rect x="10.0" y="755.0" width="95.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="766.0">javax/swing..</text>
</g>
<g>
<title>javax/swing/RepaintManager$4.run (3 samples, 8.11%)</title><rect x="10.0" y="739.0" width="95.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="750.0">javax/swing..</text>
</g>
<g>
<title>java2d/Surface.paintImmediately (1 samples, 2.70%)</title><rect x="10.0" y="723.0" width="31.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="734.0">ja..</text>
</g>
<g>
<title>javax/swing/JComponent.paintImmediately (1 samples, 2.70%)</title><rect x="10.0" y="707.0" width="31.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="718.0">ja..</text>
</g>
<g>
<title>javax/swing/JComponent._paintImmediately (1 samples, 2.70%)</title><rect x="10.0" y="691.0" width="31.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="702.0">ja..</text>
</g>
<g>
<title>javax/swing/RepaintManager.paint (1 samples, 2.70%)</title><rect x="10.0" y="675.0" width="31.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="686.0">ja..</text>
</g>
<g>
<title>javax/swing/BufferStrategyPaintManager.paint (1 samples, 2.70%)</title><rect x="10.0" y="659.0" width="31.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="670.0">ja..</text>
</g>
<g>
<title>javax/swing/JComponent.paintToOffscreen (1 samples, 2.70%)</title><rect x="10.0" y="643.0" width="31.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="654.0">ja..</text>
</g>
<g>
<title>java2d/Surface.paint (1 samples, 2.70%)</title><rect x="10.0" y="627.0" width="31.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="638.0">ja..</text>
</g>
<g>
<title>java2d/Surface.createGraphics2D (1 samples, 2.70%)</title><rect x="10.0" y="611.0" width="31.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.0" y="622.0">ja..</text>
</g>
<g>
<title>sun/java2d/SunGraphics2D.clearRect (1 samples, 2.70%)</title><rect x="10.0" y="595.0" width="31.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="606.0">su..</text>
</g>
<g>
<title>sun/java2d/SunGraphics2D.fillRect (1 samples, 2.70%)</title><rect x="10.0" y="579.0" width="31.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="590.0">su..</text>
</g>
<g>
<title>sun/java2d/pipe/ValidatePipe.fillRect (1 samples, 2.70%)</title><rect x="10.0" y="563.0" width="31.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="574.0">su..</text>
</g>
<g>
<title>sun/java2d/pipe/PixelToParallelogramConverter.fillRect (1 samples, 2.70%)</title><rect x="10.0" y="547.0" width="31.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="558.0">su..</text>
</g>
<g>
<title>sun/java2d/pipe/PixelToParallelogramConverter.fillRectangle (1 samples, 2.70%)</title><rect x="10.0" y="531.0" width="31.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="542.0">su..</text>
</g>
<g>
<title>sun/java2d/pipe/AAShapePipe.fillParallelogram (1 samples, 2.70%)</title><rect x="10.0" y="515.0" width="31.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="526.0">su..</text>
</g>
<g>
<title>sun/java2d/pipe/AAShapePipe.renderTiles (1 samples, 2.70%)</title><rect x="10.0" y="499.0" width="31.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="510.0">su..</text>
</g>
<g>
<title>sun/java2d/pipe/AlphaPaintPipe.renderPathTile (1 samples, 2.70%)</title><rect x="10.0" y="483.0" width="31.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="494.0">su..</text>
</g>
<g>
<title>java/awt/ColorPaintContext.getRaster (1 samples, 2.70%)</title><rect x="10.0" y="467.0" width="31.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="478.0">ja..</text>
</g>
<g>
<title>java/util/Arrays.fill (1 samples, 2.70%)</title><rect x="10.0" y="451.0" width="31.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="462.0">ja..</text>
</g>
<g>
<title>Runtime1::counter_overflow(JavaThread*, int, Method*) (1 samples, 2.70%)</title><rect x="10.0" y="435.0" width="31.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="13.0" y="446.0">Ru..</text>
</g>
<g>
<title>Deoptimization::deoptimize_frame(JavaThread*, long*) (1 samples, 2.70%)</title><rect x="10.0" y="419.0" width="31.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="13.0" y="430.0">De..</text>
</g>
<g>
<title>Deoptimization::deoptimize_frame_internal(JavaThread*, long*, Deoptimization::DeoptReason) (1 samples, 2.70%)</title><rect x="10.0" y="403.0" width="31.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="13.0" y="414.0">De..</text>
</g>
<g>
<title>Deoptimization::revoke_biases_of_monitors(JavaThread*, frame, RegisterMap*) (1 samples, 2.70%)</title><rect x="10.0" y="387.0" width="31.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="13.0" y="398.0">De..</text>
</g>
<g>
<title>BiasedLocking::revoke(GrowableArray&lt;Handle&gt;*) (1 samples, 2.70%)</title><rect x="10.0" y="371.0" width="31.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="13.0" y="382.0">Bi..</text>
</g>
<g>
<title>VMThread::execute(VM_Operation*) (1 samples, 2.70%)</title><rect x="10.0" y="355.0" width="31.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.0" y="366.0">VM..</text>
</g>
<g>
<title>javax/swing/JComponent.paintImmediately (2 samples, 5.41%)</title><rect x="41.9" y="723.0" width="63.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="44.9" y="734.0">javax/s..</text>
</g>
<g>
<title>javax/swing/JComponent._paintImmediately (2 samples, 5.41%)</title><rect x="41.9" y="707.0" width="63.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="44.9" y="718.0">javax/s..</text>
</g>
<g>
<title>javax/swing/RepaintManager.paint (2 samples, 5.41%)</title><rect x="41.9" y="691.0" width="63.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="44.9" y="702.0">javax/s..</text>
</g>
<g>
<title>javax/swing/BufferStrategyPaintManager.paint (2 samples, 5.41%)</title><rect x="41.9" y="675.0" width="63.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="44.9" y="686.0">javax/s..</text>
</g>
<g>
<title>javax/swing/JComponent.paintToOffscreen (2 samples, 5.41%)</title><rect x="41.9" y="659.0" width="63.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="44.9" y="670.0">javax/s..</text>
</g>
<g>
<title>javax/swing/JComponent.paint (2 samples, 5.41%)</title><rect x="41.9" y="643.0" width="63.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="44.9" y="654.0">javax/s..</text>
</g>
<g>
<title>javax/swing/JComponent.paintChildren (2 samples, 5.41%)</title><rect x="41.9" y="627.0" width="63.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="44.9" y="638.0">javax/s..</text>
</g>
<g>
<title>javax/swing/JComponent.paint (2 samples, 5.41%)</title><rect x="41.9" y="611.0" width="63.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="44.9" y="622.0">javax/s..</text>
</g>
<g>
<title>javax/swing/JComponent.paintChildren (2 samples, 5.41%)</title><rect x="41.9" y="595.0" width="63.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="44.9" y="606.0">javax/s..</text>
</g>
<g>
<title>javax/swing/JComponent.paint (2 samples, 5.41%)</title><rect x="41.9" y="579.0" width="63.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="44.9" y="590.0">javax/s..</text>
</g>
<g>
<title>javax/swing/JComponent.paintChildren (2 samples, 5.41%)</title><rect x="41.9" y="563.0" width="63.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="44.9" y="574.0">javax/s..</text>
</g>
<g>
<title>javax/swing/JComponent.paint (2 samples, 5.41%)</title><rect x="41.9" y="547.0" width="63.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="44.9" y="558.0">javax/s..</text>
</g>
<g>
<title>javax/swing/JComponent.paintChildren (2 samples, 5.41%)</title><rect x="41.9" y="531.0" width="63.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="44.9" y="542.0">javax/s..</text>
</g>
<g>
<title>javax/swing/JComponent.paint (2 samples, 5.41%)</title><rect x="41.9" y="515.0" width="63.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="44.9" y="526.0">javax/s..</text>
</g>
<g>
<title>javax/swing/JComponent.paintChildren (2 samples, 5.41%)</title><rect x="41.9" y="499.0" width="63.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="44.9" y="510.0">javax/s..</text>
</g>
<g>
<title>javax/swing/JComponent.paint (2 samples, 5.41%)</title><rect x="41.9" y="483.0" width="63.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="44.9" y="494.0">javax/s..</text>
</g>
<g>
<title>javax/swing/JComponent.paintChildren (2 samples, 5.41%)</title><rect x="41.9" y="467.0" width="63.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="44.9" y="478.0">javax/s..</text>
</g>
<g>
<title>java2d/Surface.paint (2 samples, 5.41%)</title><rect x="41.9" y="451.0" width="63.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="44.9" y="462.0">java2d/..</text>
</g>
<g>
<title>java2d/demos/Images/JPEGFlip.render (1 samples, 2.70%)</title><rect x="41.9" y="435.0" width="31.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="44.9" y="446.0">ja..</text>
</g>
<g>
<title>javax/imageio/ImageIO.createImageOutputStream (1 samples, 2.70%)</title><rect x="41.9" y="419.0" width="31.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="44.9" y="430.0">ja..</text>
</g>
<g>
<title>com/sun/imageio/spi/OutputStreamImageOutputStreamSpi.createOutputStreamInstance (1 samples, 2.70%)</title><rect x="41.9" y="403.0" width="31.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="44.9" y="414.0">co..</text>
</g>
<g>
<title>javax/imageio/stream/FileCacheImageOutputStream.&lt;init&gt; (1 samples, 2.70%)</title><rect x="41.9" y="387.0" width="31.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="44.9" y="398.0">ja..</text>
</g>
<g>
<title>javax/imageio/stream/ImageOutputStreamImpl.&lt;init&gt; (1 samples, 2.70%)</title><rect x="41.9" y="371.0" width="31.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="44.9" y="382.0">ja..</text>
</g>
<g>
<title>javax/imageio/stream/ImageInputStreamImpl.&lt;init&gt; (1 samples, 2.70%)</title><rect x="41.9" y="355.0" width="31.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="44.9" y="366.0">ja..</text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 2.70%)</title><rect x="41.9" y="339.0" width="31.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="44.9" y="350.0">In..</text>
</g>
<g>
<title>ConstantPool::klass_at_impl(constantPoolHandle const&amp;, int, bool, Thread*) (1 samples, 2.70%)</title><rect x="41.9" y="323.0" width="31.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="44.9" y="334.0">Co..</text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 2.70%)</title><rect x="41.9" y="307.0" width="31.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="44.9" y="318.0">Sy..</text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 2.70%)</title><rect x="41.9" y="291.0" width="31.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="44.9" y="302.0">Sy..</text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 2.70%)</title><rect x="41.9" y="275.0" width="31.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="44.9" y="286.0">Sy..</text>
</g>
<g>
<title>SystemDictionary::find_or_define_instance_class(Symbol*, Handle, InstanceKlass*, Thread*) (1 samples, 2.70%)</title><rect x="41.9" y="259.0" width="31.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="44.9" y="270.0">Sy..</text>
</g>
<g>
<title>SystemDictionary::define_instance_class(InstanceKlass*, Thread*) (1 samples, 2.70%)</title><rect x="41.9" y="243.0" width="31.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="44.9" y="254.0">Sy..</text>
</g>
<g>
<title>CodeCache::flush_dependents_on(InstanceKlass*) (1 samples, 2.70%)</title><rect x="41.9" y="227.0" width="31.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="44.9" y="238.0">Co..</text>
</g>
<g>
<title>VMThread::execute(VM_Operation*) (1 samples, 2.70%)</title><rect x="41.9" y="211.0" width="31.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="44.9" y="222.0">VM..</text>
</g>
<g>
<title>java2d/demos/Mix/Stars3D.render (1 samples, 2.70%)</title><rect x="73.8" y="435.0" width="31.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="76.8" y="446.0">ja..</text>
</g>
<g>
<title>sun/java2d/SunGraphics2D.fill (1 samples, 2.70%)</title><rect x="73.8" y="419.0" width="31.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="76.8" y="430.0">su..</text>
</g>
<g>
<title>sun/java2d/pipe/ValidatePipe.fill (1 samples, 2.70%)</title><rect x="73.8" y="403.0" width="31.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="76.8" y="414.0">su..</text>
</g>
<g>
<title>sun/java2d/pipe/ValidatePipe.validate (1 samples, 2.70%)</title><rect x="73.8" y="387.0" width="31.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="76.8" y="398.0">su..</text>
</g>
<g>
<title>sun/java2d/SunGraphics2D.validatePipe (1 samples, 2.70%)</title><rect x="73.8" y="371.0" width="31.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="76.8" y="382.0">su..</text>
</g>
<g>
<title>sun/java2d/xr/XRSurfaceData.validatePipe (1 samples, 2.70%)</title><rect x="73.8" y="355.0" width="31.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="76.8" y="366.0">su..</text>
</g>
<g>
<title>sun/java2d/SurfaceData.validatePipe (1 samples, 2.70%)</title><rect x="73.8" y="339.0" width="31.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="76.8" y="350.0">su..</text>
</g>
<g>
<title>sun/java2d/xr/XRSurfaceData.getMaskFill (1 samples, 2.70%)</title><rect x="73.8" y="323.0" width="31.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="76.8" y="334.0">su..</text>
</g>
<g>
<title>sun/java2d/SurfaceData.getMaskFill (1 samples, 2.70%)</title><rect x="73.8" y="307.0" width="31.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="76.8" y="318.0">su..</text>
</g>
<g>
<title>sun/java2d/loops/MaskFill.getFromCache (1 samples, 2.70%)</title><rect x="73.8" y="291.0" width="31.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="76.8" y="302.0">su..</text>
</g>
<g>
<title>sun/java2d/loops/RenderCache.get (1 samples, 2.70%)</title><rect x="73.8" y="275.0" width="31.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="76.8" y="286.0">su..</text>
</g>
<g>
<title>Deoptimization::uncommon_trap(JavaThread*, int, int) (1 samples, 2.70%)</title><rect x="73.8" y="259.0" width="31.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="76.8" y="270.0">De..</text>
</g>
<g>
<title>Deoptimization::uncommon_trap_inner(JavaThread*, int) (1 samples, 2.70%)</title><rect x="73.8" y="243.0" width="31.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="76.8" y="254.0">De..</text>
</g>
<g>
<title>Deoptimization::revoke_biases_of_monitors(JavaThread*, frame, RegisterMap*) (1 samples, 2.70%)</title><rect x="73.8" y="227.0" width="31.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="76.8" y="238.0">De..</text>
</g>
<g>
<title>BiasedLocking::revoke(GrowableArray&lt;Handle&gt;*) (1 samples, 2.70%)</title><rect x="73.8" y="211.0" width="31.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="76.8" y="222.0">Bi..</text>
</g>
<g>
<title>VMThread::execute(VM_Operation*) (1 samples, 2.70%)</title><rect x="73.8" y="195.0" width="31.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="76.8" y="206.0">VM..</text>
</g>
<g>
<title>java/awt/EventQueue$5.run (10 samples, 27.03%)</title><rect x="105.7" y="915.0" width="318.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="108.7" y="926.0">java/awt/EventQueue$5.run</text>
</g>
<g>
<title>java/awt/EventQueue$5.run (10 samples, 27.03%)</title><rect x="105.7" y="899.0" width="318.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="108.7" y="910.0">java/awt/EventQueue$5.run</text>
</g>
<g>
<title>java/security/ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege (10 samples, 27.03%)</title><rect x="105.7" y="883.0" width="318.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="108.7" y="894.0">java/security/ProtectionDomain$JavaSecurity..</text>
</g>
<g>
<title>java/security/ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege (10 samples, 27.03%)</title><rect x="105.7" y="867.0" width="318.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="108.7" y="878.0">java/security/ProtectionDomain$JavaSecurity..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (10 samples, 27.03%)</title><rect x="105.7" y="851.0" width="318.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="108.7" y="862.0">java/security/AccessController.doPrivileged</text>
</g>
<g>
<title>java/awt/EventQueue$4.run (10 samples, 27.03%)</title><rect x="105.7" y="835.0" width="318.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="108.7" y="846.0">java/awt/EventQueue$4.run</text>
</g>
<g>
<title>java/awt/EventQueue$4.run (10 samples, 27.03%)</title><rect x="105.7" y="819.0" width="318.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="108.7" y="830.0">java/awt/EventQueue$4.run</text>
</g>
<g>
<title>java/awt/EventQueue.dispatchEventImpl (10 samples, 27.03%)</title><rect x="105.7" y="803.0" width="318.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="108.7" y="814.0">java/awt/EventQueue.dispatchEventImpl</text>
</g>
<g>
<title>java/awt/Component.dispatchEvent (10 samples, 27.03%)</title><rect x="105.7" y="787.0" width="318.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="108.7" y="798.0">java/awt/Component.dispatchEvent</text>
</g>
<g>
<title>java/awt/Window.dispatchEventImpl (10 samples, 27.03%)</title><rect x="105.7" y="771.0" width="318.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="108.7" y="782.0">java/awt/Window.dispatchEventImpl</text>
</g>
<g>
<title>java/awt/Container.dispatchEventImpl (10 samples, 27.03%)</title><rect x="105.7" y="755.0" width="318.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="108.7" y="766.0">java/awt/Container.dispatchEventImpl</text>
</g>
<g>
<title>java/awt/LightweightDispatcher.dispatchEvent (10 samples, 27.03%)</title><rect x="105.7" y="739.0" width="318.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="108.7" y="750.0">java/awt/LightweightDispatcher.dispatchEvent</text>
</g>
<g>
<title>java/awt/LightweightDispatcher.processMouseEvent (10 samples, 27.03%)</title><rect x="105.7" y="723.0" width="318.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="108.7" y="734.0">java/awt/LightweightDispatcher.processMouse..</text>
</g>
<g>
<title>java/awt/LightweightDispatcher.retargetMouseEvent (10 samples, 27.03%)</title><rect x="105.7" y="707.0" width="318.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="108.7" y="718.0">java/awt/LightweightDispatcher.retargetMous..</text>
</g>
<g>
<title>java/awt/Component.dispatchEvent (10 samples, 27.03%)</title><rect x="105.7" y="691.0" width="318.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="108.7" y="702.0">java/awt/Component.dispatchEvent</text>
</g>
<g>
<title>java/awt/Container.dispatchEventImpl (10 samples, 27.03%)</title><rect x="105.7" y="675.0" width="318.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="108.7" y="686.0">java/awt/Container.dispatchEventImpl</text>
</g>
<g>
<title>java/awt/Component.dispatchEventImpl (10 samples, 27.03%)</title><rect x="105.7" y="659.0" width="318.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="108.7" y="670.0">java/awt/Component.dispatchEventImpl</text>
</g>
<g>
<title>java/awt/Container.processEvent (10 samples, 27.03%)</title><rect x="105.7" y="643.0" width="318.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="108.7" y="654.0">java/awt/Container.processEvent</text>
</g>
<g>
<title>java/awt/Component.processEvent (10 samples, 27.03%)</title><rect x="105.7" y="627.0" width="318.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="108.7" y="638.0">java/awt/Component.processEvent</text>
</g>
<g>
<title>javax/swing/JComponent.processMouseEvent (10 samples, 27.03%)</title><rect x="105.7" y="611.0" width="318.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="108.7" y="622.0">javax/swing/JComponent.processMouseEvent</text>
</g>
<g>
<title>java/awt/Component.processMouseEvent (10 samples, 27.03%)</title><rect x="105.7" y="595.0" width="318.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="108.7" y="606.0">java/awt/Component.processMouseEvent</text>
</g>
<g>
<title>javax/swing/plaf/basic/BasicTabbedPaneUI$Handler.mousePressed (10 samples, 27.03%)</title><rect x="105.7" y="579.0" width="318.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="108.7" y="590.0">javax/swing/plaf/basic/BasicTabbedPaneUI$Ha..</text>
</g>
<g>
<title>javax/swing/JTabbedPane.setSelectedIndex (10 samples, 27.03%)</title><rect x="105.7" y="563.0" width="318.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="108.7" y="574.0">javax/swing/JTabbedPane.setSelectedIndex</text>
</g>
<g>
<title>javax/swing/JTabbedPane.setSelectedIndexImpl (10 samples, 27.03%)</title><rect x="105.7" y="547.0" width="318.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="108.7" y="558.0">javax/swing/JTabbedPane.setSelectedIndexImpl</text>
</g>
<g>
<title>javax/swing/DefaultSingleSelectionModel.setSelectedIndex (10 samples, 27.03%)</title><rect x="105.7" y="531.0" width="318.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="108.7" y="542.0">javax/swing/DefaultSingleSelectionModel.set..</text>
</g>
<g>
<title>javax/swing/DefaultSingleSelectionModel.fireStateChanged (10 samples, 27.03%)</title><rect x="105.7" y="515.0" width="318.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="108.7" y="526.0">javax/swing/DefaultSingleSelectionModel.fir..</text>
</g>
<g>
<title>javax/swing/JTabbedPane$ModelListener.stateChanged (10 samples, 27.03%)</title><rect x="105.7" y="499.0" width="318.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="108.7" y="510.0">javax/swing/JTabbedPane$ModelListener.state..</text>
</g>
<g>
<title>javax/swing/JTabbedPane.fireStateChanged (10 samples, 27.03%)</title><rect x="105.7" y="483.0" width="318.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="108.7" y="494.0">javax/swing/JTabbedPane.fireStateChanged</text>
</g>
<g>
<title>java2d/GlobalPanel.stateChanged (10 samples, 27.03%)</title><rect x="105.7" y="467.0" width="318.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="108.7" y="478.0">java2d/GlobalPanel.stateChanged</text>
</g>
<g>
<title>java/awt/Container.add (1 samples, 2.70%)</title><rect x="105.7" y="451.0" width="31.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="108.7" y="462.0">ja..</text>
</g>
<g>
<title>java/awt/Container.addImpl (1 samples, 2.70%)</title><rect x="105.7" y="435.0" width="31.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="108.7" y="446.0">ja..</text>
</g>
<g>
<title>javax/swing/JComponent.addNotify (1 samples, 2.70%)</title><rect x="105.7" y="419.0" width="31.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="108.7" y="430.0">ja..</text>
</g>
<g>
<title>java/awt/Container.addNotify (1 samples, 2.70%)</title><rect x="105.7" y="403.0" width="31.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="108.7" y="414.0">ja..</text>
</g>
<g>
<title>javax/swing/JComponent.addNotify (1 samples, 2.70%)</title><rect x="105.7" y="387.0" width="31.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="108.7" y="398.0">ja..</text>
</g>
<g>
<title>java/awt/Container.addNotify (1 samples, 2.70%)</title><rect x="105.7" y="371.0" width="31.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="108.7" y="382.0">ja..</text>
</g>
<g>
<title>javax/swing/JComponent.addNotify (1 samples, 2.70%)</title><rect x="105.7" y="355.0" width="31.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="108.7" y="366.0">ja..</text>
</g>
<g>
<title>java/awt/Container.addNotify (1 samples, 2.70%)</title><rect x="105.7" y="339.0" width="31.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="108.7" y="350.0">ja..</text>
</g>
<g>
<title>javax/swing/JComponent.addNotify (1 samples, 2.70%)</title><rect x="105.7" y="323.0" width="31.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="108.7" y="334.0">ja..</text>
</g>
<g>
<title>java/awt/Container.addNotify (1 samples, 2.70%)</title><rect x="105.7" y="307.0" width="31.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="108.7" y="318.0">ja..</text>
</g>
<g>
<title>javax/swing/JComponent.addNotify (1 samples, 2.70%)</title><rect x="105.7" y="291.0" width="31.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="108.7" y="302.0">ja..</text>
</g>
<g>
<title>java/awt/Container.addNotify (1 samples, 2.70%)</title><rect x="105.7" y="275.0" width="31.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="108.7" y="286.0">ja..</text>
</g>
<g>
<title>java/awt/Component.addNotify (1 samples, 2.70%)</title><rect x="105.7" y="259.0" width="31.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="108.7" y="270.0">ja..</text>
</g>
<g>
<title>java/awt/dnd/DropTarget.addNotify (1 samples, 2.70%)</title><rect x="105.7" y="243.0" width="31.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="108.7" y="254.0">ja..</text>
</g>
<g>
<title>sun/awt/X11/XComponentPeer.addDropTarget (1 samples, 2.70%)</title><rect x="105.7" y="227.0" width="31.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="108.7" y="238.0">su..</text>
</g>
<g>
<title>sun/awt/X11/XWindowPeer.addDropTarget (1 samples, 2.70%)</title><rect x="105.7" y="211.0" width="31.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="108.7" y="222.0">su..</text>
</g>
<g>
<title>sun/awt/X11/XDropTargetRegistry.registerDropSite (1 samples, 2.70%)</title><rect x="105.7" y="195.0" width="31.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="108.7" y="206.0">su..</text>
</g>
<g>
<title>sun/awt/X11/XDropTargetRegistry.getToplevelWindow (1 samples, 2.70%)</title><rect x="105.7" y="179.0" width="31.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="108.7" y="190.0">su..</text>
</g>
<g>
<title>InterpreterRuntime::quicken_io_cc(JavaThread*) (1 samples, 2.70%)</title><rect x="105.7" y="163.0" width="31.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="108.7" y="174.0">In..</text>
</g>
<g>
<title>ConstantPool::klass_at_impl(constantPoolHandle const&amp;, int, bool, Thread*) (1 samples, 2.70%)</title><rect x="105.7" y="147.0" width="31.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="108.7" y="158.0">Co..</text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 2.70%)</title><rect x="105.7" y="131.0" width="31.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="108.7" y="142.0">Sy..</text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 2.70%)</title><rect x="105.7" y="115.0" width="31.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="108.7" y="126.0">Sy..</text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 2.70%)</title><rect x="105.7" y="99.0" width="31.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="108.7" y="110.0">Sy..</text>
</g>
<g>
<title>SystemDictionary::find_or_define_instance_class(Symbol*, Handle, InstanceKlass*, Thread*) (1 samples, 2.70%)</title><rect x="105.7" y="83.0" width="31.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="108.7" y="94.0">Sy..</text>
</g>
<g>
<title>SystemDictionary::define_instance_class(InstanceKlass*, Thread*) (1 samples, 2.70%)</title><rect x="105.7" y="67.0" width="31.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="108.7" y="78.0">Sy..</text>
</g>
<g>
<title>CodeCache::flush_dependents_on(InstanceKlass*) (1 samples, 2.70%)</title><rect x="105.7" y="51.0" width="31.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="108.7" y="62.0">Co..</text>
</g>
<g>
<title>VMThread::execute(VM_Operation*) (1 samples, 2.70%)</title><rect x="105.7" y="35.0" width="31.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="108.7" y="46.0">VM..</text>
</g>
<g>
<title>java/awt/Container.remove (1 samples, 2.70%)</title><rect x="137.6" y="451.0" width="31.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="140.6" y="462.0">ja..</text>
</g>
<g>
<title>java/awt/Container.remove (1 samples, 2.70%)</title><rect x="137.6" y="435.0" width="31.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="140.6" y="446.0">ja..</text>
</g>
<g>
<title>javax/swing/JComponent.removeNotify (1 samples, 2.70%)</title><rect x="137.6" y="419.0" width="31.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="140.6" y="430.0">ja..</text>
</g>
<g>
<title>java/awt/Container.removeNotify (1 samples, 2.70%)</title><rect x="137.6" y="403.0" width="31.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="140.6" y="414.0">ja..</text>
</g>
<g>
<title>javax/swing/JComponent.removeNotify (1 samples, 2.70%)</title><rect x="137.6" y="387.0" width="31.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="140.6" y="398.0">ja..</text>
</g>
<g>
<title>java/awt/Container.removeNotify (1 samples, 2.70%)</title><rect x="137.6" y="371.0" width="31.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="140.6" y="382.0">ja..</text>
</g>
<g>
<title>javax/swing/JComponent.removeNotify (1 samples, 2.70%)</title><rect x="137.6" y="355.0" width="31.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="140.6" y="366.0">ja..</text>
</g>
<g>
<title>java/awt/Container.removeNotify (1 samples, 2.70%)</title><rect x="137.6" y="339.0" width="31.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="140.6" y="350.0">ja..</text>
</g>
<g>
<title>javax/swing/JComponent.removeNotify (1 samples, 2.70%)</title><rect x="137.6" y="323.0" width="31.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="140.6" y="334.0">ja..</text>
</g>
<g>
<title>java/awt/Container.removeNotify (1 samples, 2.70%)</title><rect x="137.6" y="307.0" width="31.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="140.6" y="318.0">ja..</text>
</g>
<g>
<title>javax/swing/JComponent.removeNotify (1 samples, 2.70%)</title><rect x="137.6" y="291.0" width="31.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="140.6" y="302.0">ja..</text>
</g>
<g>
<title>java/awt/Component.firePropertyChange (1 samples, 2.70%)</title><rect x="137.6" y="275.0" width="31.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="140.6" y="286.0">ja..</text>
</g>
<g>
<title>java/beans/PropertyChangeSupport.firePropertyChange (1 samples, 2.70%)</title><rect x="137.6" y="259.0" width="31.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="140.6" y="270.0">ja..</text>
</g>
<g>
<title>java/beans/PropertyChangeSupport.firePropertyChange (1 samples, 2.70%)</title><rect x="137.6" y="243.0" width="31.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="140.6" y="254.0">ja..</text>
</g>
<g>
<title>java/beans/ChangeListenerMap.get (1 samples, 2.70%)</title><rect x="137.6" y="227.0" width="31.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="140.6" y="238.0">ja..</text>
</g>
<g>
<title>Deoptimization::uncommon_trap(JavaThread*, int, int) (1 samples, 2.70%)</title><rect x="137.6" y="211.0" width="31.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="140.6" y="222.0">De..</text>
</g>
<g>
<title>Deoptimization::uncommon_trap_inner(JavaThread*, int) (1 samples, 2.70%)</title><rect x="137.6" y="195.0" width="31.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="140.6" y="206.0">De..</text>
</g>
<g>
<title>Deoptimization::revoke_biases_of_monitors(JavaThread*, frame, RegisterMap*) (1 samples, 2.70%)</title><rect x="137.6" y="179.0" width="31.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="140.6" y="190.0">De..</text>
</g>
<g>
<title>BiasedLocking::revoke(GrowableArray&lt;Handle&gt;*) (1 samples, 2.70%)</title><rect x="137.6" y="163.0" width="31.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="140.6" y="174.0">Bi..</text>
</g>
<g>
<title>VMThread::execute(VM_Operation*) (1 samples, 2.70%)</title><rect x="137.6" y="147.0" width="31.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="140.6" y="158.0">VM..</text>
</g>
<g>
<title>java2d/DemoGroup.shutDown (8 samples, 21.62%)</title><rect x="169.5" y="451.0" width="255.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="172.5" y="462.0">java2d/DemoGroup.shutDown</text>
</g>
<g>
<title>java/lang/System.gc (8 samples, 21.62%)</title><rect x="169.5" y="435.0" width="255.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="172.5" y="446.0">java/lang/System.gc</text>
</g>
<g>
<title>java/lang/Runtime.gc (8 samples, 21.62%)</title><rect x="169.5" y="419.0" width="255.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="172.5" y="430.0">java/lang/Runtime.gc</text>
</g>
<g>
<title>JVM_GC (8 samples, 21.62%)</title><rect x="169.5" y="403.0" width="255.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="172.5" y="414.0">JVM_GC</text>
</g>
<g>
<title>G1CollectedHeap::collect(GCCause::Cause) (8 samples, 21.62%)</title><rect x="169.5" y="387.0" width="255.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="172.5" y="398.0">G1CollectedHeap::collect(GCCause::..</text>
</g>
<g>
<title>VMThread::execute(VM_Operation*) (8 samples, 21.62%)</title><rect x="169.5" y="371.0" width="255.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="172.5" y="382.0">VMThread::execute(VM_Operation*)</text>
</g>
<g>
<title>java/lang/Thread.run (23 samples, 62.16%)</title><rect x="424.6" y="1059.0" width="733.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="427.6" y="1070.0">java/lang/Thread.run</text>
</g>
<g>
<title>java2d/AnimatingSurface.run (5 samples, 13.51%)</title><rect x="424.6" y="1043.0" width="159.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="427.6" y="1054.0">java2d/AnimatingSurf..</text>
</g>
<g>
<title>java2d/AnimatingSurface.running (5 samples, 13.51%)</title><rect x="424.6" y="1027.0" width="159.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="427.6" y="1038.0">java2d/AnimatingSurf..</text>
</g>
<g>
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (5 samples, 13.51%)</title><rect x="424.6" y="1011.0" width="159.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="427.6" y="1022.0">Runtime1::monitorent..</text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (5 samples, 13.51%)</title><rect x="424.6" y="995.0" width="159.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="427.6" y="1006.0">ObjectSynchronizer::..</text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (5 samples, 13.51%)</title><rect x="424.6" y="979.0" width="159.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="427.6" y="990.0">BiasedLocking::revok..</text>
</g>
<g>
<title>VMThread::execute(VM_Operation*) (5 samples, 13.51%)</title><rect x="424.6" y="963.0" width="159.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="427.6" y="974.0">VMThread::execute(VM..</text>
</g>
<g>
<title>java2d/Intro$Surface.run (2 samples, 5.41%)</title><rect x="584.1" y="1043.0" width="63.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="587.1" y="1054.0">java2d/..</text>
</g>
<g>
<title>java2d/Intro$Surface$Scene.pause (2 samples, 5.41%)</title><rect x="584.1" y="1027.0" width="63.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="587.1" y="1038.0">java2d/..</text>
</g>
<g>
<title>java/lang/System.gc (2 samples, 5.41%)</title><rect x="584.1" y="1011.0" width="63.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="587.1" y="1022.0">java/la..</text>
</g>
<g>
<title>java/lang/Runtime.gc (2 samples, 5.41%)</title><rect x="584.1" y="995.0" width="63.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="587.1" y="1006.0">java/la..</text>
</g>
<g>
<title>JVM_GC (2 samples, 5.41%)</title><rect x="584.1" y="979.0" width="63.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="587.1" y="990.0">JVM_GC</text>
</g>
<g>
<title>G1CollectedHeap::collect(GCCause::Cause) (2 samples, 5.41%)</title><rect x="584.1" y="963.0" width="63.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="587.1" y="974.0">G1Colle..</text>
</g>
<g>
<title>VMThread::execute(VM_Operation*) (2 samples, 5.41%)</title><rect x="584.1" y="947.0" width="63.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="587.1" y="958.0">VMThrea..</text>
</g>
<g>
<title>java2d/MemoryMonitor$Surface.run (4 samples, 10.81%)</title><rect x="647.8" y="1043.0" width="127.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="650.8" y="1054.0">java2d/MemoryMon..</text>
</g>
<g>
<title>java/awt/Component.createImage (1 samples, 2.70%)</title><rect x="647.8" y="1027.0" width="31.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="650.8" y="1038.0">ja..</text>
</g>
<g>
<title>java/awt/Component.createImage (1 samples, 2.70%)</title><rect x="647.8" y="1011.0" width="31.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="650.8" y="1022.0">ja..</text>
</g>
<g>
<title>java/awt/Component.createImage (1 samples, 2.70%)</title><rect x="647.8" y="995.0" width="31.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="650.8" y="1006.0">ja..</text>
</g>
<g>
<title>java/awt/Component.createImage (1 samples, 2.70%)</title><rect x="647.8" y="979.0" width="31.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="650.8" y="990.0">ja..</text>
</g>
<g>
<title>java/awt/Component.createImage (1 samples, 2.70%)</title><rect x="647.8" y="963.0" width="31.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="650.8" y="974.0">ja..</text>
</g>
<g>
<title>java/awt/Component.createImage (1 samples, 2.70%)</title><rect x="647.8" y="947.0" width="31.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="650.8" y="958.0">ja..</text>
</g>
<g>
<title>java/awt/Component.createImage (1 samples, 2.70%)</title><rect x="647.8" y="931.0" width="31.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="650.8" y="942.0">ja..</text>
</g>
<g>
<title>java/awt/Component.createImage (1 samples, 2.70%)</title><rect x="647.8" y="915.0" width="31.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="650.8" y="926.0">ja..</text>
</g>
<g>
<title>java/awt/Component.createImage (1 samples, 2.70%)</title><rect x="647.8" y="899.0" width="31.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="650.8" y="910.0">ja..</text>
</g>
<g>
<title>java/awt/Component.createImage (1 samples, 2.70%)</title><rect x="647.8" y="883.0" width="31.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="650.8" y="894.0">ja..</text>
</g>
<g>
<title>sun/awt/X11/XComponentPeer.createImage (1 samples, 2.70%)</title><rect x="647.8" y="867.0" width="31.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="650.8" y="878.0">su..</text>
</g>
<g>
<title>sun/awt/X11GraphicsConfig.createAcceleratedImage (1 samples, 2.70%)</title><rect x="647.8" y="851.0" width="31.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="650.8" y="862.0">su..</text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 2.70%)</title><rect x="647.8" y="835.0" width="31.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="650.8" y="846.0">In..</text>
</g>
<g>
<title>ConstantPool::klass_at_impl(constantPoolHandle const&amp;, int, bool, Thread*) (1 samples, 2.70%)</title><rect x="647.8" y="819.0" width="31.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="650.8" y="830.0">Co..</text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 2.70%)</title><rect x="647.8" y="803.0" width="31.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="650.8" y="814.0">Sy..</text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 2.70%)</title><rect x="647.8" y="787.0" width="31.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="650.8" y="798.0">Sy..</text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 2.70%)</title><rect x="647.8" y="771.0" width="31.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="650.8" y="782.0">Sy..</text>
</g>
<g>
<title>SystemDictionary::find_or_define_instance_class(Symbol*, Handle, InstanceKlass*, Thread*) (1 samples, 2.70%)</title><rect x="647.8" y="755.0" width="31.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="650.8" y="766.0">Sy..</text>
</g>
<g>
<title>SystemDictionary::define_instance_class(InstanceKlass*, Thread*) (1 samples, 2.70%)</title><rect x="647.8" y="739.0" width="31.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="650.8" y="750.0">Sy..</text>
</g>
<g>
<title>CodeCache::flush_dependents_on(InstanceKlass*) (1 samples, 2.70%)</title><rect x="647.8" y="723.0" width="31.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="650.8" y="734.0">Co..</text>
</g>
<g>
<title>VMThread::execute(VM_Operation*) (1 samples, 2.70%)</title><rect x="647.8" y="707.0" width="31.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="650.8" y="718.0">VM..</text>
</g>
<g>
<title>sun/java2d/SunGraphics2D.getFontMetrics (3 samples, 8.11%)</title><rect x="679.7" y="1027.0" width="95.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="682.7" y="1038.0">sun/java2d/..</text>
</g>
<g>
<title>sun/font/FontDesignMetrics.getMetrics (3 samples, 8.11%)</title><rect x="679.7" y="1011.0" width="95.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="682.7" y="1022.0">sun/font/Fo..</text>
</g>
<g>
<title>sun/font/FontDesignMetrics.&lt;init&gt; (3 samples, 8.11%)</title><rect x="679.7" y="995.0" width="95.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="682.7" y="1006.0">sun/font/Fo..</text>
</g>
<g>
<title>sun/font/FontDesignMetrics.initMatrixAndMetrics (3 samples, 8.11%)</title><rect x="679.7" y="979.0" width="95.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="682.7" y="990.0">sun/font/Fo..</text>
</g>
<g>
<title>sun/font/CompositeStrike.getFontMetrics (2 samples, 5.41%)</title><rect x="679.7" y="963.0" width="63.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="682.7" y="974.0">sun/fon..</text>
</g>
<g>
<title>sun/font/CompositeStrike.getStrikeForSlot (1 samples, 2.70%)</title><rect x="679.7" y="947.0" width="31.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="682.7" y="958.0">su..</text>
</g>
<g>
<title>sun/font/Font2D.getStrike (1 samples, 2.70%)</title><rect x="679.7" y="931.0" width="31.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="682.7" y="942.0">su..</text>
</g>
<g>
<title>sun/font/Font2D.getStrike (1 samples, 2.70%)</title><rect x="679.7" y="915.0" width="31.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="682.7" y="926.0">su..</text>
</g>
<g>
<title>sun/font/FileFont.createStrike (1 samples, 2.70%)</title><rect x="679.7" y="899.0" width="31.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="682.7" y="910.0">su..</text>
</g>
<g>
<title>sun/font/FileFontStrike.&lt;init&gt; (1 samples, 2.70%)</title><rect x="679.7" y="883.0" width="31.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="682.7" y="894.0">su..</text>
</g>
<g>
<title>sun/font/TrueTypeFont.getScaler (1 samples, 2.70%)</title><rect x="679.7" y="867.0" width="31.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="682.7" y="878.0">su..</text>
</g>
<g>
<title>InterpreterRuntime::monitorenter(JavaThread*, BasicObjectLock*) (1 samples, 2.70%)</title><rect x="679.7" y="851.0" width="31.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="682.7" y="862.0">In..</text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 2.70%)</title><rect x="679.7" y="835.0" width="31.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="682.7" y="846.0">Ob..</text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (1 samples, 2.70%)</title><rect x="679.7" y="819.0" width="31.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="682.7" y="830.0">Bi..</text>
</g>
<g>
<title>VMThread::execute(VM_Operation*) (1 samples, 2.70%)</title><rect x="679.7" y="803.0" width="31.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="682.7" y="814.0">VM..</text>
</g>
<g>
<title>sun/font/FileFontStrike.getFontMetrics (1 samples, 2.70%)</title><rect x="711.6" y="947.0" width="31.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="714.6" y="958.0">su..</text>
</g>
<g>
<title>sun/font/FileFont.getFontMetrics (1 samples, 2.70%)</title><rect x="711.6" y="931.0" width="31.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="714.6" y="942.0">su..</text>
</g>
<g>
<title>sun/font/FreetypeFontScaler.getFontMetrics (1 samples, 2.70%)</title><rect x="711.6" y="915.0" width="31.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="714.6" y="926.0">su..</text>
</g>
<g>
<title>InterpreterRuntime::monitorenter(JavaThread*, BasicObjectLock*) (1 samples, 2.70%)</title><rect x="711.6" y="899.0" width="31.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="714.6" y="910.0">In..</text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 2.70%)</title><rect x="711.6" y="883.0" width="31.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="714.6" y="894.0">Ob..</text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (1 samples, 2.70%)</title><rect x="711.6" y="867.0" width="31.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="714.6" y="878.0">Bi..</text>
</g>
<g>
<title>VMThread::execute(VM_Operation*) (1 samples, 2.70%)</title><rect x="711.6" y="851.0" width="31.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="714.6" y="862.0">VM..</text>
</g>
<g>
<title>sun/font/FontUtilities.getFont2D (1 samples, 2.70%)</title><rect x="743.5" y="963.0" width="31.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="746.5" y="974.0">su..</text>
</g>
<g>
<title>java/awt/Font$FontAccessImpl.getFont2D (1 samples, 2.70%)</title><rect x="743.5" y="947.0" width="31.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="746.5" y="958.0">ja..</text>
</g>
<g>
<title>java/awt/Font.getFont2D (1 samples, 2.70%)</title><rect x="743.5" y="931.0" width="31.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="746.5" y="942.0">ja..</text>
</g>
<g>
<title>sun/font/SunFontManager.findFont2D (1 samples, 2.70%)</title><rect x="743.5" y="915.0" width="31.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="746.5" y="926.0">su..</text>
</g>
<g>
<title>sun/font/SunFontManager.findFont2DAllLocales (1 samples, 2.70%)</title><rect x="743.5" y="899.0" width="31.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="746.5" y="910.0">su..</text>
</g>
<g>
<title>InterpreterRuntime::monitorenter(JavaThread*, BasicObjectLock*) (1 samples, 2.70%)</title><rect x="743.5" y="883.0" width="31.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="746.5" y="894.0">In..</text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 2.70%)</title><rect x="743.5" y="867.0" width="31.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="746.5" y="878.0">Ob..</text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (1 samples, 2.70%)</title><rect x="743.5" y="851.0" width="31.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="746.5" y="862.0">Bi..</text>
</g>
<g>
<title>VMThread::execute(VM_Operation*) (1 samples, 2.70%)</title><rect x="743.5" y="835.0" width="31.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="746.5" y="846.0">VM..</text>
</g>
<g>
<title>java2d/PerformanceMonitor$Surface.run (2 samples, 5.41%)</title><rect x="775.4" y="1043.0" width="63.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="778.4" y="1054.0">java2d/..</text>
</g>
<g>
<title>sun/java2d/SunGraphics2D.drawString (2 samples, 5.41%)</title><rect x="775.4" y="1027.0" width="63.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="778.4" y="1038.0">sun/jav..</text>
</g>
<g>
<title>sun/java2d/pipe/ValidatePipe.drawString (2 samples, 5.41%)</title><rect x="775.4" y="1011.0" width="63.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="778.4" y="1022.0">sun/jav..</text>
</g>
<g>
<title>sun/java2d/pipe/GlyphListPipe.drawString (2 samples, 5.41%)</title><rect x="775.4" y="995.0" width="63.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="778.4" y="1006.0">sun/jav..</text>
</g>
<g>
<title>sun/font/GlyphList.setFromString (2 samples, 5.41%)</title><rect x="775.4" y="979.0" width="63.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="778.4" y="990.0">sun/fon..</text>
</g>
<g>
<title>sun/font/GlyphList.mapChars (2 samples, 5.41%)</title><rect x="775.4" y="963.0" width="63.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="778.4" y="974.0">sun/fon..</text>
</g>
<g>
<title>sun/font/CompositeStrike.getGlyphImagePtrs (2 samples, 5.41%)</title><rect x="775.4" y="947.0" width="63.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="778.4" y="958.0">sun/fon..</text>
</g>
<g>
<title>sun/font/FileFontStrike.getSlot0GlyphImagePtrs (2 samples, 5.41%)</title><rect x="775.4" y="931.0" width="63.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="778.4" y="942.0">sun/fon..</text>
</g>
<g>
<title>sun/font/FileFont.getGlyphImage (2 samples, 5.41%)</title><rect x="775.4" y="915.0" width="63.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="778.4" y="926.0">sun/fon..</text>
</g>
<g>
<title>sun/font/FreetypeFontScaler.getGlyphImage (2 samples, 5.41%)</title><rect x="775.4" y="899.0" width="63.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="778.4" y="910.0">sun/fon..</text>
</g>
<g>
<title>sun/font/FreetypeFontScaler.getGlyphImageNative (2 samples, 5.41%)</title><rect x="775.4" y="883.0" width="63.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="778.4" y="894.0">sun/fon..</text>
</g>
<g>
<title>sun/font/TrueTypeFont.readBlock (2 samples, 5.41%)</title><rect x="775.4" y="867.0" width="63.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="778.4" y="878.0">sun/fon..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.position (2 samples, 5.41%)</title><rect x="775.4" y="851.0" width="63.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="778.4" y="862.0">sun/nio..</text>
</g>
<g>
<title>InterpreterRuntime::monitorenter(JavaThread*, BasicObjectLock*) (1 samples, 2.70%)</title><rect x="775.4" y="835.0" width="31.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="778.4" y="846.0">In..</text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 2.70%)</title><rect x="775.4" y="819.0" width="31.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="778.4" y="830.0">Ob..</text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (1 samples, 2.70%)</title><rect x="775.4" y="803.0" width="31.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="778.4" y="814.0">Bi..</text>
</g>
<g>
<title>VMThread::execute(VM_Operation*) (1 samples, 2.70%)</title><rect x="775.4" y="787.0" width="31.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="778.4" y="798.0">VM..</text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 2.70%)</title><rect x="807.3" y="835.0" width="31.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="810.3" y="846.0">su..</text>
</g>
<g>
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (1 samples, 2.70%)</title><rect x="807.3" y="819.0" width="31.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="810.3" y="830.0">Ru..</text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 2.70%)</title><rect x="807.3" y="803.0" width="31.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="810.3" y="814.0">Ob..</text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (1 samples, 2.70%)</title><rect x="807.3" y="787.0" width="31.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="810.3" y="798.0">Bi..</text>
</g>
<g>
<title>VMThread::execute(VM_Operation*) (1 samples, 2.70%)</title><rect x="807.3" y="771.0" width="31.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="810.3" y="782.0">VM..</text>
</g>
<g>
<title>sun/awt/X11/XToolkit.run (2 samples, 5.41%)</title><rect x="839.2" y="1043.0" width="63.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="842.2" y="1054.0">sun/awt..</text>
</g>
<g>
<title>sun/awt/X11/XToolkit.run (2 samples, 5.41%)</title><rect x="839.2" y="1027.0" width="63.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="842.2" y="1038.0">sun/awt..</text>
</g>
<g>
<title>sun/awt/X11/XToolkit.dispatchEvent (2 samples, 5.41%)</title><rect x="839.2" y="1011.0" width="63.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="842.2" y="1022.0">sun/awt..</text>
</g>
<g>
<title>sun/awt/X11/XBaseWindow.dispatchToWindow (2 samples, 5.41%)</title><rect x="839.2" y="995.0" width="63.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="842.2" y="1006.0">sun/awt..</text>
</g>
<g>
<title>sun/awt/X11/XBaseWindow.dispatchEvent (2 samples, 5.41%)</title><rect x="839.2" y="979.0" width="63.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="842.2" y="990.0">sun/awt..</text>
</g>
<g>
<title>sun/awt/X11/XWindowPeer.handleButtonPressRelease (1 samples, 2.70%)</title><rect x="839.2" y="963.0" width="31.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="842.2" y="974.0">su..</text>
</g>
<g>
<title>InterpreterRuntime::quicken_io_cc(JavaThread*) (1 samples, 2.70%)</title><rect x="839.2" y="947.0" width="31.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="842.2" y="958.0">In..</text>
</g>
<g>
<title>ConstantPool::klass_at_impl(constantPoolHandle const&amp;, int, bool, Thread*) (1 samples, 2.70%)</title><rect x="839.2" y="931.0" width="31.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="842.2" y="942.0">Co..</text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 2.70%)</title><rect x="839.2" y="915.0" width="31.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="842.2" y="926.0">Sy..</text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 2.70%)</title><rect x="839.2" y="899.0" width="31.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="842.2" y="910.0">Sy..</text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 2.70%)</title><rect x="839.2" y="883.0" width="31.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="842.2" y="894.0">Sy..</text>
</g>
<g>
<title>SystemDictionary::find_or_define_instance_class(Symbol*, Handle, InstanceKlass*, Thread*) (1 samples, 2.70%)</title><rect x="839.2" y="867.0" width="31.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="842.2" y="878.0">Sy..</text>
</g>
<g>
<title>SystemDictionary::define_instance_class(InstanceKlass*, Thread*) (1 samples, 2.70%)</title><rect x="839.2" y="851.0" width="31.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="842.2" y="862.0">Sy..</text>
</g>
<g>
<title>CodeCache::flush_dependents_on(InstanceKlass*) (1 samples, 2.70%)</title><rect x="839.2" y="835.0" width="31.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="842.2" y="846.0">Co..</text>
</g>
<g>
<title>VMThread::execute(VM_Operation*) (1 samples, 2.70%)</title><rect x="839.2" y="819.0" width="31.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="842.2" y="830.0">VM..</text>
</g>
<g>
<title>sun/awt/X11/XWindowPeer.handleMapNotifyEvent (1 samples, 2.70%)</title><rect x="871.1" y="963.0" width="31.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="874.1" y="974.0">su..</text>
</g>
<g>
<title>sun/awt/X11/XComponentPeer.handleMapNotifyEvent (1 samples, 2.70%)</title><rect x="871.1" y="947.0" width="31.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="874.1" y="958.0">su..</text>
</g>
<g>
<title>sun/awt/X11/XWindow.handleMapNotifyEvent (1 samples, 2.70%)</title><rect x="871.1" y="931.0" width="31.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="874.1" y="942.0">su..</text>
</g>
<g>
<title>sun/awt/X11/XComponentPeer.isEventDisabled (1 samples, 2.70%)</title><rect x="871.1" y="915.0" width="31.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="874.1" y="926.0">su..</text>
</g>
<g>
<title>sun/awt/X11/XComponentPeer.isEnabled (1 samples, 2.70%)</title><rect x="871.1" y="899.0" width="31.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="874.1" y="910.0">su..</text>
</g>
<g>
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (1 samples, 2.70%)</title><rect x="871.1" y="883.0" width="31.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="874.1" y="894.0">Ru..</text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 2.70%)</title><rect x="871.1" y="867.0" width="31.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="874.1" y="878.0">Ob..</text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (1 samples, 2.70%)</title><rect x="871.1" y="851.0" width="31.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="874.1" y="862.0">Bi..</text>
</g>
<g>
<title>VMThread::execute(VM_Operation*) (1 samples, 2.70%)</title><rect x="871.1" y="835.0" width="31.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="874.1" y="846.0">VM..</text>
</g>
<g>
<title>sun/font/SunFontManager$8.run (8 samples, 21.62%)</title><rect x="903.0" y="1043.0" width="255.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="906.0" y="1054.0">sun/font/SunFontManager$8.run</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (8 samples, 21.62%)</title><rect x="903.0" y="1027.0" width="255.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="906.0" y="1038.0">java/security/AccessController.doP..</text>
</g>
<g>
<title>sun/font/SunFontManager$8$1.run (8 samples, 21.62%)</title><rect x="903.0" y="1011.0" width="255.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="906.0" y="1022.0">sun/font/SunFontManager$8$1.run</text>
</g>
<g>
<title>sun/font/TrueTypeFont.close (8 samples, 21.62%)</title><rect x="903.0" y="995.0" width="255.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="906.0" y="1006.0">sun/font/TrueTypeFont.close</text>
</g>
<g>
<title>InterpreterRuntime::monitorenter(JavaThread*, BasicObjectLock*) (4 samples, 10.81%)</title><rect x="903.0" y="979.0" width="127.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="906.0" y="990.0">InterpreterRunti..</text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (4 samples, 10.81%)</title><rect x="903.0" y="963.0" width="127.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="906.0" y="974.0">ObjectSynchroniz..</text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (4 samples, 10.81%)</title><rect x="903.0" y="947.0" width="127.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="906.0" y="958.0">BiasedLocking::r..</text>
</g>
<g>
<title>VMThread::execute(VM_Operation*) (4 samples, 10.81%)</title><rect x="903.0" y="931.0" width="127.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="906.0" y="942.0">VMThread::execut..</text>
</g>
<g>
<title>sun/font/TrueTypeFont$TTDisposerRecord.dispose (4 samples, 10.81%)</title><rect x="1030.5" y="979.0" width="127.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1033.5" y="990.0">sun/font/TrueTyp..</text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.close (4 samples, 10.81%)</title><rect x="1030.5" y="963.0" width="127.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1033.5" y="974.0">java/nio/channel..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.implCloseChannel (4 samples, 10.81%)</title><rect x="1030.5" y="947.0" width="127.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1033.5" y="958.0">sun/nio/ch/FileC..</text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.signalAndWait (4 samples, 10.81%)</title><rect x="1030.5" y="931.0" width="127.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1033.5" y="942.0">sun/nio/ch/Nativ..</text>
</g>
<g>
<title>InterpreterRuntime::monitorenter(JavaThread*, BasicObjectLock*) (4 samples, 10.81%)</title><rect x="1030.5" y="915.0" width="127.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1033.5" y="926.0">InterpreterRunti..</text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (4 samples, 10.81%)</title><rect x="1030.5" y="899.0" width="127.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1033.5" y="910.0">ObjectSynchroniz..</text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (4 samples, 10.81%)</title><rect x="1030.5" y="883.0" width="127.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1033.5" y="894.0">BiasedLocking::r..</text>
</g>
<g>
<title>VMThread::execute(VM_Operation*) (4 samples, 10.81%)</title><rect x="1030.5" y="867.0" width="127.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1033.5" y="878.0">VMThread::execut..</text>
</g>
<g>
<title>sun/awt/image/ImageFetcher.run (1 samples, 2.70%)</title><rect x="1158.1" y="1059.0" width="31.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1161.1" y="1070.0">su..</text>
</g>
<g>
<title>sun/awt/image/ImageFetcher.fetchloop (1 samples, 2.70%)</title><rect x="1158.1" y="1043.0" width="31.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1161.1" y="1054.0">su..</text>
</g>
<g>
<title>sun/awt/image/InputStreamImageSource.doFetch (1 samples, 2.70%)</title><rect x="1158.1" y="1027.0" width="31.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1161.1" y="1038.0">su..</text>
</g>
<g>
<title>sun/awt/image/GifImageDecoder.produceImage (1 samples, 2.70%)</title><rect x="1158.1" y="1011.0" width="31.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1161.1" y="1022.0">su..</text>
</g>
<g>
<title>sun/awt/image/ImageFetcher.startingAnimation (1 samples, 2.70%)</title><rect x="1158.1" y="995.0" width="31.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1161.1" y="1006.0">su..</text>
</g>
<g>
<title>java/lang/Thread.setName (1 samples, 2.70%)</title><rect x="1158.1" y="979.0" width="31.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1161.1" y="990.0">ja..</text>
</g>
<g>
<title>InterpreterRuntime::monitorenter(JavaThread*, BasicObjectLock*) (1 samples, 2.70%)</title><rect x="1158.1" y="963.0" width="31.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1161.1" y="974.0">In..</text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 2.70%)</title><rect x="1158.1" y="947.0" width="31.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1161.1" y="958.0">Ob..</text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (1 samples, 2.70%)</title><rect x="1158.1" y="931.0" width="31.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1161.1" y="942.0">Bi..</text>
</g>
<g>
<title>VMThread::execute(VM_Operation*) (1 samples, 2.70%)</title><rect x="1158.1" y="915.0" width="31.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1161.1" y="926.0">VM..</text>
</g>
</g>
</svg>
